var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.499,1,0.718]],["body/components/AppComponent.html",[0,0.854,1,1.292,2,1.554,3,0.743,4,0.615,5,1.697,6,1.697,7,1.697,8,1.697,9,0.615,10,2.448,11,1.697,12,2.61,13,1.888,14,2.554,15,2.148,16,4.304,17,2.148,18,3.923,19,0.743,20,1.554,21,4.304,22,0.885,23,0.063,24,1.441,25,1.441,26,1.228,27,3.923,28,3.098,29,1.228,30,3.1,31,0.885,32,0.885,33,0.743,34,0.499,35,1.228,36,2.148,37,1.823,38,1.697,39,2.477,40,1.697,41,1.322,42,1.697,43,0.885,44,1.697,45,1.697,46,0.885,47,1.697,48,0.885,49,1.697,50,1.441,51,1.697,52,1.697,53,0.038,54,0.048,55,0.038]],["title/modules/AppModule.html",[56,1.377,57,1.377]],["body/modules/AppModule.html",[1,1.414,2,1.09,3,0.66,4,0.546,9,0.546,13,1.09,23,0.064,31,1.394,32,0.786,33,0.66,34,0.443,35,1.09,43,1.318,46,1.318,48,1.318,53,0.034,54,0.045,55,0.034,56,1.507,57,2.752,58,1.279,59,1.507,60,3.211,61,3.211,62,2.868,63,1.792,64,2.173,65,2.173,66,2.173,67,2.173,68,2.146,69,2.868,70,2.173,71,1.507,72,2.752,73,3.211,74,2.868,75,2.752,76,2.752,77,2.752,78,3.633,79,2.173,80,3.633,81,2.868,82,1.507,83,3.633,84,2.752,85,2.752,86,1.792,87,3.633,88,3.633,89,3.633,90,1.792,91,2.752,92,1.792]],["title/classes/AppPage.html",[34,0.405,93,1.638]],["body/classes/AppPage.html",[3,0.833,4,0.689,9,0.689,14,2.261,19,0.833,23,0.063,29,1.667,31,0.992,33,0.833,34,0.559,37,1.615,53,0.043,54,0.052,55,0.043,82,1.902,93,2.74,94,3.474,95,2.743,96,1.957,97,4.708,98,4.708,99,3.474,100,1.957,101,4.902,102,3.474,103,2.743,104,2.74,105,3.474,106,3.474,107,2.743,108,3.474]],["title/modules/AppRoutingModule.html",[56,1.377,68,1.169]],["body/modules/AppRoutingModule.html",[3,0.876,4,0.726,9,0.726,23,0.063,31,1.239,32,1.044,33,0.876,34,0.589,53,0.045,54,0.053,55,0.045,58,1.699,63,2.38,68,2.017,73,2.886,74,3.427,109,3.655,110,3.655,111,3.014,112,4.34,113,2.886,114,1.699,115,3.655]],["title/injectables/DataTasksService.html",[116,1.377,117,0.996]],["body/injectables/DataTasksService.html",[3,0.403,4,0.334,9,0.334,14,1.096,19,0.403,20,1.014,22,1.307,23,0.064,24,2,25,1.44,26,1.227,29,1.766,31,1.063,32,0.481,33,0.403,34,0.271,41,1.416,50,2.039,53,0.043,54,0.031,55,0.021,79,1.329,96,1.19,100,1.952,104,2.734,107,2.021,114,1.609,116,1.401,117,1.014,118,1.683,119,3.571,120,1.329,121,2.355,122,3.097,123,3.097,124,2.021,125,2.476,126,2.56,127,1.895,128,2.56,129,3.097,130,3.097,131,2.021,132,2.021,133,2.56,134,0.922,135,1.683,136,3.461,137,2.56,138,2.355,139,1.952,140,2.56,141,2.56,142,2.147,143,1.683,144,3.921,145,4.623,146,2.56,147,1.683,148,0.782,149,1.683,150,2.56,151,3.723,152,1.683,153,3.097,154,1.683,155,1.696,156,2.56,157,1.683,158,1.683,159,0.922,160,2.56,161,1.416,162,1.683,163,2.56,164,1.683,165,1.683,166,2.56,167,1.683,168,2.56,169,1.329,170,2.56,171,1.014,172,3.097,173,3.461,174,2.56,175,1.683,176,1.329,177,1.683,178,1.683,179,2.56,180,1.683,181,0.922,182,1.683,183,3.723,184,1.683,185,1.683,186,0.922,187,1.666,188,1.666,189,2.021,190,1.683,191,1.683,192,1.683,193,1.683,194,1.683,195,1.683,196,1.683,197,1.683,198,1.683,199,1.683,200,3.461,201,1.683,202,1.329,203,2.56,204,1.683,205,1.683,206,2.56,207,1.683,208,1.683,209,1.683,210,1.683,211,3.097,212,1.683,213,1.683,214,1.683,215,1.683,216,1.683,217,2.56,218,1.329,219,2.56,220,1.401,221,1.401,222,1.683,223,2.56,224,1.683,225,1.683,226,1.683,227,1.329,228,1.683,229,1.683,230,1.683,231,1.683,232,1.683,233,1.683,234,1.683,235,1.683,236,1.683,237,1.683,238,1.683]],["title/components/EditTaskComponent.html",[0,0.499,43,0.718]],["body/components/EditTaskComponent.html",[0,0.652,1,0.53,2,1.091,3,0.445,4,0.368,5,1.016,6,1.016,7,1.016,8,1.016,9,0.368,11,1.016,12,2.227,13,1.611,15,1.508,17,1.508,19,0.445,20,1.091,22,1.161,23,0.064,26,1.091,29,1.781,31,1.038,32,0.53,33,0.445,34,0.299,35,0.735,36,1.508,37,1.28,38,1.016,39,1.99,40,1.016,41,1.371,42,1.016,43,1.038,44,2.368,45,1.016,46,0.53,47,1.016,48,0.53,49,1.016,50,1.527,51,1.016,52,1.016,53,0.023,54,0.034,55,0.023,86,2.97,90,1.208,96,1.28,100,1.805,114,0.862,117,1.611,121,1.016,125,2.419,127,1.99,134,1.016,138,1.508,139,1.28,148,1.28,155,1.508,159,2.227,161,1.489,171,0.735,181,1.016,186,1.016,220,2.227,221,2.227,239,3.602,240,1.208,241,1.793,242,2.138,243,2.593,244,2.174,245,3.284,246,3.284,247,3.634,248,2.366,249,3.634,250,2.174,251,2.174,252,2.593,253,2.174,254,2.593,255,1.208,256,4.211,257,2.174,258,1.855,259,2.593,260,1.855,261,1.855,262,1.465,263,1.465,264,1.855,265,2.174,266,1.855,267,1.465,268,1.465,269,3.284,270,1.793,271,2.174,272,1.208,273,1.208,274,1.855,275,1.855,276,1.208,277,1.793,278,1.465,279,1.793,280,1.208,281,1.465,282,1.208,283,1.465,284,1.855,285,1.855,286,1.855,287,1.855,288,1.855,289,1.793,290,1.855,291,1.855,292,1.855,293,1.855,294,1.855,295,1.855,296,1.855,297,1.855,298,1.855,299,2.754,300,2.754,301,2.754,302,2.754,303,2.754,304,2.754,305,3.634,306,2.754,307,2.754,308,2.754]],["title/interfaces/ITasks.html",[161,0.848,309,1.377]],["body/interfaces/ITasks.html",[3,0.74,4,0.612,9,0.612,19,0.74,20,1.549,22,1.444,23,0.062,24,2.367,33,0.74,41,1.522,53,0.038,54,0.048,55,0.038,139,2.34,142,2.351,148,2.275,161,1.318,289,2.94,309,1.689,310,3.086,311,2.436,312,2.94,313,4.516,314,4.516,315,4.516,316,3.391]],["title/components/TasksComponent.html",[0,0.499,46,0.718]],["body/components/TasksComponent.html",[0,0.443,1,0.295,2,0.686,3,0.248,4,0.205,5,0.565,6,0.565,7,0.565,8,0.565,9,0.205,11,0.565,12,1.725,13,1.248,15,0.948,17,0.948,19,0.248,20,0.686,22,1.238,23,0.064,24,0.48,25,1.354,26,1.445,29,1.802,31,0.638,32,0.295,33,0.248,34,0.166,35,0.409,36,0.948,37,0.805,38,0.565,39,1.431,40,0.565,41,1.476,42,0.565,43,0.295,44,1.223,45,0.565,46,0.747,47,0.565,48,0.295,49,1.223,50,1.632,51,0.565,52,0.565,53,0.013,54,0.021,55,0.013,71,0.565,96,0.805,100,1.913,104,1.127,114,1.556,117,1.248,121,1.998,124,1.367,125,2.714,127,1.431,131,1.367,132,0.816,134,0.565,138,2.12,139,1.8,142,1.223,148,0.805,155,1.594,159,2.491,161,1.462,171,0.409,181,0.565,186,0.565,187,1.455,188,1.455,189,0.816,202,2.643,220,0.565,221,0.565,241,1.127,242,1.455,248,1.702,252,1.764,255,0.672,270,0.672,272,0.672,273,0.672,276,0.672,277,1.896,279,1.896,280,0.672,282,2.179,289,1.127,316,1.367,317,0.816,318,2.234,319,1.731,320,2.234,321,2.234,322,2.234,323,2.234,324,1.764,325,2.234,326,2.234,327,1.731,328,1.731,329,1.731,330,2.615,331,2.615,332,1.731,333,1.731,334,1.731,335,1.731,336,1.731,337,1.731,338,1.731,339,1.033,340,1.033,341,1.731,342,1.033,343,2.234,344,1.731,345,1.033,346,1.033,347,1.033,348,1.033,349,1.033,350,1.033,351,1.033,352,1.731,353,1.033,354,1.731,355,1.033,356,1.731,357,1.033,358,1.731,359,1.033,360,1.033,361,1.033,362,1.033,363,1.033,364,1.896,365,1.033,366,2.285,367,1.033,368,1.033,369,1.033,370,1.033,371,1.033,372,1.033,373,1.033,374,1.731,375,1.033,376,0.816,377,0.816,378,2.234,379,1.033,380,1.033,381,1.033,382,2.234,383,2.234,384,1.033,385,1.033,386,1.731,387,1.731,388,1.731,389,2.615,390,1.731,391,1.033,392,1.033,393,1.033,394,1.033,395,1.731,396,1.731,397,1.731,398,1.033,399,1.033,400,1.033,401,1.731,402,2.374,403,2.234,404,1.033,405,1.731,406,1.033,407,1.033,408,1.033,409,1.127,410,1.033,411,1.033,412,1.033,413,1.033,414,1.731,415,1.731,416,2.615,417,1.731,418,3.151,419,1.731,420,1.731,421,1.731,422,1.731,423,1.731,424,1.731,425,1.731,426,1.033,427,1.731,428,3.347,429,3.347,430,1.033,431,1.033,432,1.731,433,1.731,434,1.033,435,1.033,436,1.033,437,1.033,438,1.033,439,2.234,440,3.151,441,1.731,442,2.615,443,1.731,444,1.731,445,2.234,446,1.033,447,2.234,448,1.033,449,2.615,450,1.731,451,1.033,452,1.731,453,1.033,454,1.033,455,1.033,456,1.731,457,2.234,458,1.731,459,2.234,460,1.033,461,1.033,462,1.033,463,1.731,464,1.731,465,1.033,466,1.033,467,1.033,468,1.033,469,1.731,470,1.033,471,1.033,472,1.033,473,1.033,474,1.033,475,1.033,476,1.033,477,1.033,478,1.033,479,1.033,480,1.731,481,2.615,482,1.033,483,1.033,484,1.033,485,1.033,486,1.033,487,1.033,488,1.033,489,1.033,490,1.033,491,1.033,492,1.033,493,1.033,494,1.033,495,1.033,496,1.033,497,1.033,498,1.033,499,1.033,500,1.033]],["title/components/TimerTaskComponent.html",[0,0.499,48,0.718]],["body/components/TimerTaskComponent.html",[0,0.591,1,0.307,2,0.708,3,0.257,4,0.213,5,0.588,6,0.588,7,0.588,8,0.588,9,0.213,11,0.588,12,1.759,13,1.272,15,0.979,17,0.979,19,0.257,20,0.708,22,1.206,23,0.064,24,0.499,25,1.245,26,1.349,29,1.86,31,0.656,32,0.307,33,0.257,34,0.173,35,0.425,36,0.979,37,0.831,38,0.588,39,1.467,40,0.588,41,0.903,42,0.588,43,0.307,44,0.588,45,0.588,46,0.307,47,0.588,48,0.765,49,2.197,50,1.722,51,0.588,52,0.588,53,0.013,54,0.022,55,0.013,92,3.07,96,0.831,100,1.989,114,0.831,117,1.272,121,2.312,125,2.73,127,1.467,134,0.588,138,0.979,139,0.831,142,1.759,148,0.831,155,0.979,159,2.418,161,1.288,171,1.179,181,0.588,186,0.588,187,1.496,188,1.496,218,0.848,220,1.629,221,1.629,227,0.848,240,0.699,241,1.164,242,1.496,243,1.814,244,1.412,248,1.744,250,1.412,251,1.412,253,1.412,254,1.814,255,0.699,257,0.848,259,1.814,262,1.412,263,0.848,265,1.412,267,0.848,268,0.848,270,1.164,271,1.412,272,0.699,273,0.699,276,0.699,277,1.496,278,0.848,279,1.496,280,0.699,281,0.848,282,0.699,283,0.848,324,1.814,364,0.699,366,0.699,376,0.848,377,0.848,402,2.029,409,0.699,501,3.724,502,1.074,503,2.298,504,2.298,505,2.298,506,2.298,507,2.298,508,2.298,509,2.298,510,2.298,511,2.298,512,2.298,513,2.679,514,2.679,515,2.679,516,2.679,517,2.679,518,2.679,519,2.679,520,2.679,521,2.679,522,2.679,523,2.298,524,2.679,525,1.074,526,1.074,527,1.074,528,1.074,529,1.074,530,1.074,531,1.074,532,2.679,533,1.788,534,1.074,535,1.788,536,2.679,537,1.074,538,1.074,539,1.074,540,1.074,541,1.074,542,1.074,543,1.074,544,1.074,545,4.012,546,1.074,547,1.074,548,1.074,549,1.074,550,1.074,551,1.074,552,1.074,553,3.213,554,1.074,555,1.074,556,1.074,557,1.074,558,1.074,559,1.074,560,1.074,561,1.074,562,1.074,563,1.074,564,1.074,565,1.074,566,1.074,567,1.074,568,1.074,569,1.074,570,1.074,571,1.074,572,1.074,573,1.074,574,1.074,575,1.074,576,1.074,577,1.074,578,1.074,579,1.074,580,1.074,581,1.788,582,2.298,583,2.298,584,1.074,585,2.298,586,2.679,587,1.074,588,2.679,589,1.074,590,3.407,591,1.074,592,1.788,593,1.788,594,2.298,595,1.788,596,1.788,597,1.074,598,1.074,599,1.074,600,1.074,601,1.074,602,1.788,603,1.074,604,1.788,605,1.788,606,1.788,607,1.788,608,1.788,609,1.788,610,1.788,611,1.788,612,1.788,613,1.788,614,1.074,615,1.074,616,1.074,617,1.074,618,1.074,619,1.788,620,1.074,621,1.074,622,1.074,623,3.705,624,1.074,625,1.074,626,1.074,627,1.074,628,1.788]],["title/coverage.html",[629,2.701]],["body/coverage.html",[0,0.913,1,0.926,9,0.644,10,2.561,22,0.926,23,0.063,34,0.522,43,0.926,46,0.926,48,0.926,53,0.04,54,0.05,55,0.04,86,2.112,92,2.112,93,2.112,95,2.561,116,1.776,117,1.285,119,2.561,120,2.561,161,1.093,171,1.285,239,2.561,240,2.628,309,1.776,311,2.561,312,2.112,317,2.561,402,2.747,501,2.561,629,2.561,630,3.244,631,3.244,632,3.244,633,3.244,634,3.244,635,3.244,636,3.244,637,3.244,638,3.244,639,3.244,640,3.244,641,2.561,642,4.598,643,3.187,644,4.598,645,2.561,646,3.187,647,2.561,648,3.244,649,3.244]],["title/dependencies.html",[59,1.655,650,2.108]],["body/dependencies.html",[23,0.063,32,1.035,53,0.045,54,0.053,55,0.045,59,1.985,81,3.41,82,2.365,90,2.36,113,2.863,176,2.863,651,3.625,652,5.043,653,3.625,654,3.625,655,3.625,656,3.625,657,3.625,658,3.625,659,3.625,660,3.625]],["title/index.html",[19,0.505,661,2.108,662,2.108]],["body/index.html",[0,0.861,4,0.625,13,1.248,23,0.049,28,3.424,41,1.062,53,0.039,54,0.049,55,0.039,71,1.725,103,2.488,171,1.248,663,3.152,664,3.964,665,3.152,666,4.337,667,3.152,668,3.152,669,3.152,670,3.964,671,4.689,672,4.859,673,3.152,674,3.152,675,3.152,676,3.152,677,3.152,678,3.152,679,3.152,680,3.152,681,3.152,682,3.152,683,4.337,684,4.337,685,3.152,686,4.689,687,3.152,688,3.152,689,3.152,690,3.152,691,3.152,692,3.152,693,2.488,694,3.964,695,3.964,696,4.551,697,3.152,698,3.964,699,3.964,700,3.152,701,4.551,702,3.152,703,3.152,704,4.337,705,3.152,706,3.152,707,3.152,708,3.152]],["title/modules.html",[58,1.59]],["body/modules.html",[23,0.056,53,0.048,54,0.056,55,0.048,57,2.143,58,1.82,68,1.82,82,2.143,709,3.914,710,3.914,711,4.518,712,3.914,713,3.914]],["title/overview.html",[714,2.701]],["body/overview.html",[1,1.407,2,1.334,23,0.061,34,0.542,35,1.334,43,1.276,46,1.276,48,1.276,53,0.041,54,0.051,55,0.041,56,1.844,57,2.798,58,1.565,59,1.844,60,2.659,61,2.659,62,2.659,63,2.192,64,2.659,65,2.659,66,2.659,67,2.659,68,2.077,69,3.262,70,2.659,71,1.844,116,1.844,309,1.844,402,1.844,409,2.909,714,2.659,715,3.368,716,3.368]],["title/routes.html",[111,2.227]],["body/routes.html",[23,0.056,53,0.049,54,0.056,55,0.049,111,2.618]],["title/miscellaneous/variables.html",[717,1.664,718,2.386]],["body/miscellaneous/variables.html",[19,0.844,22,1.35,23,0.063,25,2.117,26,1.804,53,0.043,54,0.052,55,0.043,169,3.35,312,2.762,364,2.762,366,2.291,641,2.779,643,3.734,645,2.779,646,2.779,647,3.35,693,3.35,717,2.779,718,2.779,719,4.243,720,3.52,721,3.52,722,3.52,723,3.52,724,3.52]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":402,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.1",{"_index":470,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.10.2",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":472,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.2",{"_index":462,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.3",{"_index":467,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.6",{"_index":448,"title":{},"body":{"components/TasksComponent.html":{}}}],["0/1",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":623,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["1",{"_index":409,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"overview.html":{}}}],["1.625",{"_index":496,"title":{},"body":{"components/TasksComponent.html":{}}}],["1/30",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["10.1.5",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["10.1.6",{"_index":668,"title":{},"body":{"index.html":{}}}],["1000",{"_index":601,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["14px",{"_index":451,"title":{},"body":{"components/TasksComponent.html":{}}}],["16px",{"_index":458,"title":{},"body":{"components/TasksComponent.html":{}}}],["18px",{"_index":499,"title":{},"body":{"components/TasksComponent.html":{}}}],["1px",{"_index":440,"title":{},"body":{"components/TasksComponent.html":{}}}],["2",{"_index":715,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["255",{"_index":469,"title":{},"body":{"components/TasksComponent.html":{}}}],["3",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":466,"title":{},"body":{"components/TasksComponent.html":{}}}],["4",{"_index":716,"title":{},"body":{"overview.html":{}}}],["4px",{"_index":481,"title":{},"body":{"components/TasksComponent.html":{}}}],["6.6.0",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["600px",{"_index":486,"title":{},"body":{"components/TasksComponent.html":{}}}],["8px",{"_index":457,"title":{},"body":{"components/TasksComponent.html":{}}}],["a5dc86",{"_index":478,"title":{},"body":{"components/TasksComponent.html":{}}}],["absolute",{"_index":435,"title":{},"body":{"components/TasksComponent.html":{}}}],["accept",{"_index":174,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["actioncreate",{"_index":320,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionprimary",{"_index":327,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionprimary(e",{"_index":338,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionprimaryexecute",{"_index":328,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionprimaryexecute(event",{"_index":341,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionsearch",{"_index":321,"title":{},"body":{"components/TasksComponent.html":{}}}],["actual_component",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["align",{"_index":454,"title":{},"body":{"components/TasksComponent.html":{}}}],["amet",{"_index":610,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["angular",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataTasksService.html":{}}}],["angular/compiler",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":185,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["apiurltasks",{"_index":122,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"index.html":{}}}],["app.component",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":173,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["appmodule",{"_index":57,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":93,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":68,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":583,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["arraytasks",{"_index":322,"title":{},"body":{"components/TasksComponent.html":{}}}],["artifacts",{"_index":687,"title":{},"body":{"index.html":{}}}],["atid",{"_index":144,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["atid.split('/').pop",{"_index":219,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["auto",{"_index":497,"title":{},"body":{"components/TasksComponent.html":{}}}],["automatically",{"_index":677,"title":{},"body":{"index.html":{}}}],["available",{"_index":713,"title":{},"body":{"modules.html":{}}}],["background",{"_index":444,"title":{},"body":{"components/TasksComponent.html":{}}}],["block",{"_index":400,"title":{},"body":{"components/TasksComponent.html":{}}}],["body",{"_index":605,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["boolean",{"_index":316,"title":{},"body":{"interfaces/ITasks.html":{},"components/TasksComponent.html":{}}}],["bootstrap",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":442,"title":{},"body":{"components/TasksComponent.html":{}}}],["bottom",{"_index":500,"title":{},"body":{"components/TasksComponent.html":{}}}],["box",{"_index":463,"title":{},"body":{"components/TasksComponent.html":{}}}],["browse",{"_index":711,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":105,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["btnreset",{"_index":503,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["btnstart",{"_index":504,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["btnstop",{"_index":505,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["build",{"_index":686,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":177,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('delete",{"_index":233,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('gettasks",{"_index":209,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('post",{"_index":216,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('search",{"_index":238,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('updatetask",{"_index":229,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror(`get",{"_index":204,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["center",{"_index":455,"title":{},"body":{"components/TasksComponent.html":{}}}],["change",{"_index":679,"title":{},"body":{"index.html":{}}}],["changer",{"_index":300,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["check",{"_index":707,"title":{},"body":{"index.html":{}}}],["chrono",{"_index":604,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["chronometer",{"_index":513,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["class",{"_index":34,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":94,"title":{},"body":{"classes/AppPage.html":{}}}],["clearinterval(this.interval",{"_index":614,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["cli",{"_index":666,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":613,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["clickresetchrono",{"_index":514,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["clickstartchrono",{"_index":515,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["clickstopchrono",{"_index":516,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["clip",{"_index":437,"title":{},"body":{"components/TasksComponent.html":{}}}],["close",{"_index":517,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["cluster_appmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":681,"title":{},"body":{"index.html":{}}}],["codepen",{"_index":483,"title":{},"body":{"components/TasksComponent.html":{}}}],["color",{"_index":445,"title":{},"body":{"components/TasksComponent.html":{}}}],["completed",{"_index":377,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"overview.html":{}}}],["components/edit",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tasks/tasks.component",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["components/timer",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["console",{"_index":192,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["console.error(error",{"_index":191,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["console.log('completed",{"_index":280,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["console.log('get",{"_index":376,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["console.log('notification",{"_index":612,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["console.log(`${message",{"_index":190,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["console.log(`fetched",{"_index":201,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["console.log(error",{"_index":279,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["console.log(this.arraytasks",{"_index":413,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.log(this.arraytasks.splice(elem",{"_index":408,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.log(this.heure",{"_index":597,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["console.log(valueactionprimary",{"_index":380,"title":{},"body":{"components/TasksComponent.html":{}}}],["const",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["constructor",{"_index":134,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["constructor(datatasksservice",{"_index":255,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["constructor(http",{"_index":135,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["constructor(private",{"_index":186,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["contactform",{"_index":284,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["contactform.id",{"_index":287,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["contactform.isterminated",{"_index":290,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["contactform.name",{"_index":288,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["content",{"_index":107,"title":{},"body":{"classes/AppPage.html":{},"injectables/DataTasksService.html":{}}}],["context",{"_index":312,"title":{},"body":{"interfaces/ITasks.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":629,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":414,"title":{},"body":{"components/TasksComponent.html":{}}}],["createform",{"_index":247,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["createtask",{"_index":381,"title":{},"body":{"components/TasksComponent.html":{}}}],["cursor",{"_index":475,"title":{},"body":{"components/TasksComponent.html":{}}}],["data",{"_index":267,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["data['hydra:member",{"_index":208,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice",{"_index":117,"title":{"injectables/DataTasksService.html":{}},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["datatasksservice.log(`${operation",{"_index":194,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice.log(`deleted",{"_index":231,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice.log(`post",{"_index":213,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice.log(`search",{"_index":236,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice.log(`updated",{"_index":226,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["date",{"_index":593,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["dateend",{"_index":313,"title":{},"body":{"interfaces/ITasks.html":{}}}],["datestart",{"_index":314,"title":{},"body":{"interfaces/ITasks.html":{}}}],["de",{"_index":303,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["declarations",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["delete",{"_index":416,"title":{},"body":{"components/TasksComponent.html":{}}}],["deletetask",{"_index":124,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["deletetask(atid",{"_index":141,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["deletetask(task",{"_index":344,"title":{},"body":{"components/TasksComponent.html":{}}}],["dependencies",{"_index":59,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":502,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["dev",{"_index":674,"title":{},"body":{"index.html":{}}}],["development",{"_index":669,"title":{},"body":{"index.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["directives",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":685,"title":{},"body":{"index.html":{}}}],["directory",{"_index":690,"title":{},"body":{"index.html":{}}}],["display",{"_index":430,"title":{},"body":{"components/TasksComponent.html":{}}}],["displayheure",{"_index":599,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["displaysec",{"_index":598,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["dist",{"_index":689,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('deletemessage').style.display",{"_index":395,"title":{},"body":{"components/TasksComponent.html":{}}}],["document.getelementbyid('heure",{"_index":561,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["document.getelementbyid('minute",{"_index":559,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["document.getelementbyid('reset",{"_index":567,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["document.getelementbyid('seconde",{"_index":557,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["document.getelementbyid('start",{"_index":563,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["document.getelementbyid('stop",{"_index":565,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["document.getelementsbyclassname('multideleted",{"_index":398,"title":{},"body":{"components/TasksComponent.html":{}}}],["documentation",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":608,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["duration",{"_index":315,"title":{},"body":{"interfaces/ITasks.html":{}}}],["durée",{"_index":424,"title":{},"body":{"components/TasksComponent.html":{}}}],["dynamic",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":340,"title":{},"body":{"components/TasksComponent.html":{}}}],["e.target.value",{"_index":379,"title":{},"body":{"components/TasksComponent.html":{}}}],["e2e",{"_index":702,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":95,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":102,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":99,"title":{},"body":{"classes/AppPage.html":{}}}],["e4e4e4",{"_index":446,"title":{},"body":{"components/TasksComponent.html":{}}}],["ease",{"_index":473,"title":{},"body":{"components/TasksComponent.html":{}}}],["edit",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["editcurrenttask",{"_index":252,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["editcurrenttask.name",{"_index":299,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["edittask",{"_index":329,"title":{},"body":{"components/TasksComponent.html":{}}}],["edittask(task",{"_index":346,"title":{},"body":{"components/TasksComponent.html":{}}}],["edittaskactive",{"_index":323,"title":{},"body":{"components/TasksComponent.html":{}}}],["edittaskcomponent",{"_index":43,"title":{"components/EditTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["elem",{"_index":397,"title":{},"body":{"components/TasksComponent.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["element(by.css('app",{"_index":106,"title":{},"body":{"classes/AppPage.html":{}}}],["en",{"_index":420,"title":{},"body":{"components/TasksComponent.html":{}}}],["end",{"_index":701,"title":{},"body":{"index.html":{}}}],["enter",{"_index":387,"title":{},"body":{"components/TasksComponent.html":{}}}],["environment",{"_index":643,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":155,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["error.message",{"_index":196,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["event",{"_index":343,"title":{},"body":{"components/TasksComponent.html":{}}}],["event.key",{"_index":386,"title":{},"body":{"components/TasksComponent.html":{}}}],["event.target.value",{"_index":389,"title":{},"body":{"components/TasksComponent.html":{}}}],["eventemitter",{"_index":259,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["example",{"_index":532,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["execute",{"_index":698,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["exports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["failed",{"_index":195,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["false",{"_index":366,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":487,"title":{},"body":{"components/TasksComponent.html":{}}}],["field",{"_index":429,"title":{},"body":{"components/TasksComponent.html":{}}}],["fieldprimary",{"_index":426,"title":{},"body":{"components/TasksComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["files",{"_index":680,"title":{},"body":{"index.html":{}}}],["finish",{"_index":418,"title":{},"body":{"components/TasksComponent.html":{}}}],["flag",{"_index":692,"title":{},"body":{"index.html":{}}}],["flex",{"_index":431,"title":{},"body":{"components/TasksComponent.html":{}}}],["float:left",{"_index":427,"title":{},"body":{"components/TasksComponent.html":{}}}],["font",{"_index":449,"title":{},"body":{"components/TasksComponent.html":{}}}],["form",{"_index":484,"title":{},"body":{"components/TasksComponent.html":{}}}],["formbuilder",{"_index":256,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formgroup",{"_index":269,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formsmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalues",{"_index":245,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["found",{"_index":405,"title":{},"body":{"components/TasksComponent.html":{}}}],["further",{"_index":703,"title":{},"body":{"index.html":{}}}],["generate",{"_index":683,"title":{},"body":{"index.html":{}}}],["generated",{"_index":665,"title":{},"body":{"index.html":{}}}],["gettask",{"_index":126,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["gettask(id",{"_index":146,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["gettasks",{"_index":127,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["getting",{"_index":661,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":97,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":706,"title":{},"body":{"index.html":{}}}],["good",{"_index":533,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["grande",{"_index":489,"title":{},"body":{"components/TasksComponent.html":{}}}],["graph",{"_index":712,"title":{},"body":{"modules.html":{}}}],["h2",{"_index":498,"title":{},"body":{"components/TasksComponent.html":{}}}],["handleerror",{"_index":128,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["handleerror(operation",{"_index":150,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["headers",{"_index":170,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["height",{"_index":439,"title":{},"body":{"components/TasksComponent.html":{}}}],["help",{"_index":704,"title":{},"body":{"index.html":{}}}],["heure",{"_index":506,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["hidden",{"_index":433,"title":{},"body":{"components/TasksComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["htmlelement",{"_index":545,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["http",{"_index":140,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["http://127.0.0.1:8000/api/tasks",{"_index":168,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["http://localhost:4200",{"_index":676,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":136,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["httpclientmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":172,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["httpoptions",{"_index":123,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["id",{"_index":148,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["id=${atid",{"_index":232,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["id=${id",{"_index":203,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["id=${newtask.id",{"_index":215,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["id=${task.id",{"_index":228,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["identifier",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["idheure",{"_index":507,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["idminute",{"_index":508,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["idseconde",{"_index":509,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["ignore",{"_index":221,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["implements",{"_index":241,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["important",{"_index":436,"title":{},"body":{"components/TasksComponent.html":{}}}],["imports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["initimer",{"_index":518,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["injectable",{"_index":116,"title":{"injectables/DataTasksService.html":{}},"body":{"injectables/DataTasksService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":118,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["inline",{"_index":399,"title":{},"body":{"components/TasksComponent.html":{}}}],["input",{"_index":270,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["input:checked",{"_index":477,"title":{},"body":{"components/TasksComponent.html":{}}}],["inputs",{"_index":251,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["inset",{"_index":465,"title":{},"body":{"components/TasksComponent.html":{}}}],["instead",{"_index":193,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["interface",{"_index":309,"title":{"interfaces/ITasks.html":{}},"body":{"interfaces/ITasks.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":310,"title":{},"body":{"interfaces/ITasks.html":{}}}],["interfaces/itasks",{"_index":181,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["interval",{"_index":510,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["ipsum",{"_index":607,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["isterminated",{"_index":289,"title":{},"body":{"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{}}}],["itasks",{"_index":161,"title":{"interfaces/ITasks.html":{}},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["jours",{"_index":308,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["karma",{"_index":700,"title":{},"body":{"index.html":{}}}],["la",{"_index":304,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["label",{"_index":443,"title":{},"body":{"components/TasksComponent.html":{}}}],["label:first",{"_index":479,"title":{},"body":{"components/TasksComponent.html":{}}}],["label:hover",{"_index":474,"title":{},"body":{"components/TasksComponent.html":{}}}],["label:last",{"_index":482,"title":{},"body":{"components/TasksComponent.html":{}}}],["le",{"_index":301,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"overview.html":{}}}],["line",{"_index":452,"title":{},"body":{"components/TasksComponent.html":{}}}],["line:prefer",{"_index":401,"title":{},"body":{"components/TasksComponent.html":{}}}],["line:radix",{"_index":585,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["line:typedef",{"_index":189,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["link",{"_index":578,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["literal",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":130,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["log(message",{"_index":156,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["lorem",{"_index":606,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["lucida",{"_index":488,"title":{},"body":{"components/TasksComponent.html":{}}}],["map",{"_index":178,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["map(data",{"_index":207,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["margin",{"_index":459,"title":{},"body":{"components/TasksComponent.html":{}}}],["matching",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":485,"title":{},"body":{"components/TasksComponent.html":{}}}],["message",{"_index":158,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["methods",{"_index":96,"title":{},"body":{"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["mettre",{"_index":307,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["min",{"_index":511,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["miscellaneous",{"_index":717,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":56,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":58,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":705,"title":{},"body":{"index.html":{}}}],["multideletion",{"_index":330,"title":{},"body":{"components/TasksComponent.html":{}}}],["multifinish",{"_index":331,"title":{},"body":{"components/TasksComponent.html":{}}}],["multiple",{"_index":417,"title":{},"body":{"components/TasksComponent.html":{}}}],["mynotification",{"_index":602,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["mynotification.onclick",{"_index":611,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"index.html":{}}}],["name=${searchitem",{"_index":237,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["navigate",{"_index":675,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":98,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":171,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":188,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["ng",{"_index":672,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":248,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["nom",{"_index":302,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["none",{"_index":396,"title":{},"body":{"components/TasksComponent.html":{}}}],["normal",{"_index":495,"title":{},"body":{"components/TasksComponent.html":{}}}],["notification('start",{"_index":603,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["notification('stop",{"_index":615,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["null",{"_index":553,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["number",{"_index":142,"title":{},"body":{"injectables/DataTasksService.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["object",{"_index":169,"title":{},"body":{"injectables/DataTasksService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":145,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["of(result",{"_index":197,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["oninit",{"_index":242,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["onsubmit",{"_index":249,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["operation",{"_index":153,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["optional",{"_index":139,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["out",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"components/TasksComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":271,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["outputs",{"_index":253,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["overflow",{"_index":432,"title":{},"body":{"components/TasksComponent.html":{}}}],["overview",{"_index":714,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":650,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":456,"title":{},"body":{"components/TasksComponent.html":{}}}],["param",{"_index":575,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["parameters",{"_index":138,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["parseint(array[0",{"_index":587,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["parseint(array[1",{"_index":589,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["parseint(array[2",{"_index":591,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["pipe",{"_index":206,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["play",{"_index":519,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["pointer",{"_index":476,"title":{},"body":{"components/TasksComponent.html":{}}}],["position",{"_index":434,"title":{},"body":{"components/TasksComponent.html":{}}}],["posttask",{"_index":131,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["posttask(event",{"_index":352,"title":{},"body":{"components/TasksComponent.html":{}}}],["posttask(task",{"_index":160,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["private",{"_index":121,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["process",{"_index":576,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["processed",{"_index":535,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["processtarget(&#39;yo&#39",{"_index":534,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["processtarget('yo",{"_index":574,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["prod",{"_index":691,"title":{},"body":{"index.html":{}}}],["production",{"_index":693,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":664,"title":{},"body":{"index.html":{}}}],["promise",{"_index":101,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["protractor",{"_index":103,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":182,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["providers",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":125,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["radius",{"_index":480,"title":{},"body":{"components/TasksComponent.html":{}}}],["reactform",{"_index":246,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["reactiveformsmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":708,"title":{},"body":{"index.html":{}}}],["rect(0",{"_index":438,"title":{},"body":{"components/TasksComponent.html":{}}}],["reload",{"_index":678,"title":{},"body":{"index.html":{}}}],["require",{"_index":647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetchrono",{"_index":520,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["restart",{"_index":521,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["result",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":104,"title":{},"body":{"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["returns",{"_index":100,"title":{},"body":{"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["rgba(0",{"_index":447,"title":{},"body":{"components/TasksComponent.html":{}}}],["rgba(255",{"_index":468,"title":{},"body":{"components/TasksComponent.html":{}}}],["right",{"_index":460,"title":{},"body":{"components/TasksComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DataTasksService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["routermodule",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":111,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":671,"title":{},"body":{"index.html":{}}}],["running",{"_index":694,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":176,"title":{},"body":{"injectables/DataTasksService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":180,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["saerchtask",{"_index":332,"title":{},"body":{"components/TasksComponent.html":{}}}],["saerchtask(event",{"_index":354,"title":{},"body":{"components/TasksComponent.html":{}}}],["sans",{"_index":492,"title":{},"body":{"components/TasksComponent.html":{}}}],["save",{"_index":522,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["scaffolding",{"_index":682,"title":{},"body":{"index.html":{}}}],["search",{"_index":415,"title":{},"body":{"components/TasksComponent.html":{}}}],["searchitem",{"_index":165,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["searchtask",{"_index":132,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["searchtask(searchitem",{"_index":163,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["sec",{"_index":512,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["see",{"_index":577,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["selecttask",{"_index":333,"title":{},"body":{"components/TasksComponent.html":{}}}],["selecttask(task",{"_index":356,"title":{},"body":{"components/TasksComponent.html":{}}}],["serif",{"_index":493,"title":{},"body":{"components/TasksComponent.html":{}}}],["serve",{"_index":673,"title":{},"body":{"index.html":{}}}],["server",{"_index":670,"title":{},"body":{"index.html":{}}}],["services/data",{"_index":272,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["set(this.arraytasks",{"_index":412,"title":{},"body":{"components/TasksComponent.html":{}}}],["shadow",{"_index":464,"title":{},"body":{"components/TasksComponent.html":{}}}],["sit",{"_index":609,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["size",{"_index":450,"title":{},"body":{"components/TasksComponent.html":{}}}],["solid",{"_index":461,"title":{},"body":{"components/TasksComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"index.html":{}}}],["span')).gettext",{"_index":108,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/edit",{"_index":239,"title":{},"body":{"components/EditTaskComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/tasks.component.ts",{"_index":317,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/tasks.component.ts:11",{"_index":370,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:111",{"_index":345,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:12",{"_index":373,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:124",{"_index":349,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:13",{"_index":368,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:136",{"_index":363,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:14",{"_index":371,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:141",{"_index":347,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:146",{"_index":361,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:15",{"_index":369,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:159",{"_index":359,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:16",{"_index":372,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:17",{"_index":365,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:172",{"_index":357,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:18",{"_index":367,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:184",{"_index":350,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:19",{"_index":337,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:24",{"_index":351,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:28",{"_index":348,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:45",{"_index":339,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:62",{"_index":342,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:72",{"_index":353,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:88",{"_index":355,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/timer",{"_index":501,"title":{},"body":{"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/itasks.ts",{"_index":311,"title":{},"body":{"interfaces/ITasks.html":{},"coverage.html":{}}}],["src/app/services/data",{"_index":119,"title":{},"body":{"injectables/DataTasksService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["startchrono",{"_index":523,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["started",{"_index":662,"title":{"index.html":{}},"body":{}}],["statements",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":129,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["stopchrono",{"_index":524,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["stored",{"_index":688,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["subscribe",{"_index":277,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["support",{"_index":709,"title":{},"body":{"modules.html":{}}}],["supression",{"_index":419,"title":{},"body":{"components/TasksComponent.html":{}}}],["svg",{"_index":710,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":428,"title":{},"body":{"components/TasksComponent.html":{}}}],["t",{"_index":151,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["table",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["tahoma",{"_index":490,"title":{},"body":{"components/TasksComponent.html":{}}}],["tap",{"_index":179,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tap((newtask",{"_index":212,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tap(_",{"_index":200,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["target",{"_index":536,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["task.component.html",{"_index":244,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.scss",{"_index":243,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts",{"_index":240,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:108",{"_index":544,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:12",{"_index":258,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:121",{"_index":538,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:126",{"_index":541,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:13",{"_index":260,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:132",{"_index":540,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:139",{"_index":529,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:14",{"_index":268,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:143",{"_index":525,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:15",{"_index":257,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:16",{"_index":552,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:17",{"_index":551,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:18",{"_index":550,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:181",{"_index":542,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:19",{"_index":547,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:195",{"_index":543,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:20",{"_index":548,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:207",{"_index":527,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:21",{"_index":546,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:216",{"_index":528,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:22",{"_index":263,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:226",{"_index":539,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:23",{"_index":555,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:235",{"_index":526,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:24",{"_index":554,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:241",{"_index":530,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:25",{"_index":549,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:26",{"_index":262,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:31",{"_index":537,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:41",{"_index":266,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:53",{"_index":531,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:54",{"_index":264,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:66",{"_index":261,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.duration",{"_index":425,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.id",{"_index":423,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.id.tostring",{"_index":222,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["task.isterminated",{"_index":403,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.name",{"_index":422,"title":{},"body":{"components/TasksComponent.html":{}}}],["task/edit",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"coverage.html":{}}}],["task/timer",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["task['@id",{"_index":217,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["taskisfinish",{"_index":334,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskisfinish(task",{"_index":358,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskisterminated",{"_index":335,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskisterminated(task",{"_index":360,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks",{"_index":202,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["tasks'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["tasks.component.html",{"_index":319,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":318,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.service",{"_index":273,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["tasks.service.ts",{"_index":120,"title":{},"body":{"injectables/DataTasksService.html":{},"coverage.html":{}}}],["tasks.service.ts:11",{"_index":137,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:15",{"_index":175,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:23",{"_index":157,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:28",{"_index":152,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:36",{"_index":147,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:44",{"_index":149,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:56",{"_index":162,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:63",{"_index":167,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:83",{"_index":143,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:92",{"_index":164,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["taskscomponent",{"_index":46,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasksmanager",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["tasksmanagerangular",{"_index":663,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["terminée",{"_index":306,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["test",{"_index":697,"title":{},"body":{"index.html":{}}}],["tests",{"_index":696,"title":{},"body":{"index.html":{}}}],["text",{"_index":453,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.actioncreate",{"_index":382,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.actionsearch",{"_index":383,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.apiurltasks}/${atid",{"_index":223,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.apiurltasks}/${id",{"_index":198,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.apiurltasks}?name=${searchitem",{"_index":234,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.arraytasks",{"_index":411,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.arraytasks.includes(task",{"_index":406,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.arraytasks.indexof(task",{"_index":407,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.arraytasks.push(task",{"_index":410,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.btnreset",{"_index":566,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnreset.addeventlistener('click",{"_index":626,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstart",{"_index":562,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstart.addeventlistener('click",{"_index":616,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstart.disabled",{"_index":619,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstop",{"_index":564,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstop.addeventlistener('click",{"_index":620,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.chronometer",{"_index":600,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.clickresetchrono",{"_index":573,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.clickstartchrono",{"_index":571,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.clickstopchrono",{"_index":572,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.createform",{"_index":275,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.datatasksservice.deletetask(task",{"_index":394,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.datatasksservice.gettask(id",{"_index":580,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.datatasksservice.gettasks",{"_index":276,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["this.datatasksservice.posttask({name",{"_index":391,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.datatasksservice.searchtask(this.values",{"_index":393,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.datatasksservice.updatetask(data",{"_index":281,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["this.datatasksservice.updatetask(task",{"_index":404,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.editcurrenttask",{"_index":278,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["this.editcurrenttask.id",{"_index":294,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.editcurrenttask.isterminated",{"_index":298,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.editcurrenttask.name",{"_index":295,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.edittaskactive",{"_index":375,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.formbuilder.group",{"_index":293,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.formvalues",{"_index":286,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.gettasks",{"_index":282,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["this.heure",{"_index":586,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.http.delete(url",{"_index":230,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.get(this.apiurltasks",{"_index":205,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.get(url",{"_index":235,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.get(url).pipe",{"_index":199,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.post(this.apiurltasks",{"_index":210,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.put(url",{"_index":224,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.httpoptions",{"_index":225,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.httpoptions).pipe",{"_index":211,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.idheure",{"_index":560,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idheure.innertext",{"_index":625,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idminute",{"_index":558,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idminute.innertext",{"_index":624,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idseconde",{"_index":556,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idseconde.innertext",{"_index":622,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.initimer",{"_index":570,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.min",{"_index":588,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.play",{"_index":618,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.posttask(event",{"_index":384,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.reactform",{"_index":292,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.reactform.value",{"_index":285,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.resetchrono",{"_index":627,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.saerchtask(event",{"_index":385,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.save",{"_index":596,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.sec",{"_index":590,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.startchrono",{"_index":617,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.stopchrono",{"_index":621,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task",{"_index":568,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task.dateend",{"_index":595,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task.datestart",{"_index":592,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task.duration",{"_index":582,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task.duration.split",{"_index":584,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.tasks",{"_index":374,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.timercurrenttask",{"_index":569,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.timercurrenttask.id",{"_index":579,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.update(this.formvalues",{"_index":291,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.update(this.task",{"_index":594,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.updatecurrenttask.emit",{"_index":283,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["this.values",{"_index":388,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.values.trim",{"_index":390,"title":{},"body":{"components/TasksComponent.html":{}}}],["timer",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["timercurrenttask",{"_index":324,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["timerdialog",{"_index":336,"title":{},"body":{"components/TasksComponent.html":{}}}],["timerdialog(task",{"_index":362,"title":{},"body":{"components/TasksComponent.html":{}}}],["timertaskactive",{"_index":325,"title":{},"body":{"components/TasksComponent.html":{}}}],["timertaskcomponent",{"_index":48,"title":{"components/TimerTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":227,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TimerTaskComponent.html":{}}}],["traitement",{"_index":421,"title":{},"body":{"components/TasksComponent.html":{}}}],["transition",{"_index":471,"title":{},"body":{"components/TasksComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["true",{"_index":364,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":220,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["tslib",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":187,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tâche",{"_index":305,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["undefined",{"_index":218,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TimerTaskComponent.html":{}}}],["unit",{"_index":695,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":392,"title":{},"body":{"components/TasksComponent.html":{}}}],["update",{"_index":250,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["update(data",{"_index":265,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["updatecurrenttask",{"_index":254,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["updatetask",{"_index":133,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["updatetask(task",{"_index":166,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["url",{"_index":183,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["use",{"_index":684,"title":{},"body":{"index.html":{}}}],["validators",{"_index":274,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["validators.compose([validators.required",{"_index":296,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["validators.minlength(5",{"_index":297,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["value.duration",{"_index":581,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["valueactionprimary",{"_index":378,"title":{},"body":{"components/TasksComponent.html":{}}}],["values",{"_index":326,"title":{},"body":{"components/TasksComponent.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["variable",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":718,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdana",{"_index":491,"title":{},"body":{"components/TasksComponent.html":{}}}],["version",{"_index":667,"title":{},"body":{"index.html":{}}}],["via",{"_index":699,"title":{},"body":{"index.html":{}}}],["void",{"_index":159,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["w",{"_index":214,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["web",{"_index":184,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["weight",{"_index":494,"title":{},"body":{"components/TasksComponent.html":{}}}],["width",{"_index":441,"title":{},"body":{"components/TasksComponent.html":{}}}],["works",{"_index":628,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["yes",{"_index":154,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["zone.js",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tasksManager-angular'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tasksManager-angular';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TimerTaskComponent', 'selector': 'app-timer-task'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nAppModule -->\n\nTasksComponent->AppModule\n\n\n\n\n\nTimerTaskComponent\n\nTimerTaskComponent\n\nAppModule -->\n\nTimerTaskComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            EditTaskComponent\n                        \n                        \n                            TasksComponent\n                        \n                        \n                            TimerTaskComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// COMPONENTS\nimport { TasksComponent } from './Components/tasks/Tasks.component';\n\n// IMPORTS\nimport {HttpClientModule} from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EditTaskComponent } from './Components/edit-task/edit-task.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { TimerTaskComponent } from './Components/timer-task/timer-task.component';\n\n@NgModule({\n  declarations: [\n    TasksComponent,\n    AppComponent,\n    EditTaskComponent,\n    TimerTaskComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataTasksService.html":{"url":"injectables/DataTasksService.html","title":"injectable - DataTasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataTasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/data-tasks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrlTasks\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                    Public\n                                getTask\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                    Static\n                                log\n                            \n                            \n                                    Public\n                                postTask\n                            \n                            \n                                searchTask\n                            \n                            \n                                    Public\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/data-tasks.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(atId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    atId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTask(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:28\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postTask(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchTask\n                        \n                        \n                    \n                \n            \n            \n                \nsearchTask(searchItem: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchItem\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTask(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrlTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/tasks'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Services/data-tasks.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Services/data-tasks.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {ITasks} from '../Interfaces/ITasks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataTasksService {\n  private apiUrlTasks = 'http://127.0.0.1:8000/api/tasks';  // URL to web api\n  constructor(private http: HttpClient) {\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    })\n  };\n\n  // tslint:disable-next-line:typedef\n  private static log(message: string) {\n    console.log(`${message}`);\n  }\n\n  // tslint:disable-next-line:typedef\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      console.error(error); // log to console instead\n      DataTasksService.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n\n  public getTask(id: number): Observable {\n    const url = `${this.apiUrlTasks}/${id}`;\n    return this.http.get(url).pipe(\n      tap(_ => console.log(`fetched tasks id=${id}`)),\n      catchError(this.handleError(`get Task id=${id}`))\n    );\n  }\n\n  public getTasks(): Observable {\n    return this.http.get(this.apiUrlTasks)\n      .pipe(\n        map(data => data['hydra:member'],\n          tap(() => {\n              catchError(this.handleError('getTasks', []));\n            },\n          )\n        )\n      );\n  }\n\n  public postTask(task: ITasks): Observable {\n    return this.http.post(this.apiUrlTasks, task, this.httpOptions).pipe(\n      tap((newTask: ITasks) => DataTasksService.log(`Post w/ id=${newTask.id}`)),\n      catchError(this.handleError('post Task'))\n    );\n  }\n\n  public updateTask(task: ITasks): Observable {\n    let atId;\n    if (task['@id'] !== undefined) {\n      atId = task['@id'];\n      atId = atId.split('/').pop();\n    } else {\n      // @ts-ignore\n      atId = task.id.toString();\n      atId = atId.split('/').pop();\n    }\n\n    const url = `${this.apiUrlTasks}/${atId}`;\n    return this.http.put(url, task, this.httpOptions)\n      .pipe(\n        // @ts-ignore\n        tap(_ => DataTasksService.log(`updated todo id=${task.id}`)),\n        catchError(this.handleError('updateTask'))\n      );\n  }\n\n  deleteTask(atId: number): Observable {\n    const url = `${this.apiUrlTasks}/${atId}`;\n\n    return this.http.delete(url, this.httpOptions).pipe(\n      tap(_ => DataTasksService.log(`deleted task id=${atId}`)),\n      catchError(this.handleError('delete task'))\n    );\n  }\n\n  searchTask(searchItem: string): Observable {\n    const url = `${this.apiUrlTasks}?name=${searchItem}`;\n    return this.http.get(url , this.httpOptions).pipe(\n      tap(_ => DataTasksService.log(`Search task name=${searchItem}`)),\n      catchError(this.handleError('Search task error'))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTaskComponent.html":{"url":"components/EditTaskComponent.html","title":"component - EditTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/edit-task/edit-task.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-task\n            \n\n            \n                styleUrls\n                ./edit-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formValues\n                            \n                            \n                                reactForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createForm\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editCurrentTask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateCurrentTask\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTasksService: DataTasksService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/edit-task/edit-task.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTasksService\n                                                  \n                                                        \n                                                                        DataTasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editCurrentTask\n                    \n                \n                \n                    \n                        Type :         ITasks\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/edit-task/edit-task.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateCurrentTask\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/edit-task/edit-task.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(data: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITasks\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/edit-task/edit-task.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reactForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/edit-task/edit-task.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, EventEmitter, OnInit, Output} from '@angular/core';\nimport {DataTasksService} from '../../Services/data-tasks.service';\nimport {ITasks} from '../../Interfaces/ITasks';\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.scss']\n})\nexport class EditTaskComponent implements OnInit {\n  @Input() editCurrentTask: ITasks;\n  @Output() updateCurrentTask = new EventEmitter();\n  formValues: ITasks;\n  reactForm: FormGroup;\n\n  constructor(private dataTasksService: DataTasksService,\n              private formBuilder: FormBuilder\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  public getTasks(): void {\n    // @ts-ignore\n    this.dataTasksService.getTasks()\n      .subscribe(\n        // @ts-ignore\n        (value: ITasks) => this.editCurrentTask = value,\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          console.log('completed !');\n        }\n      );\n  }\n\n  update(data: ITasks): void {\n    this.dataTasksService.updateTask(data)\n      .subscribe(\n        () => {\n          this.getTasks();\n          this.updateCurrentTask.emit();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  public onSubmit(): any {\n    const contactForm = this.reactForm.value;\n    this.formValues = {\n      // @ts-ignore\n      id: contactForm.id,\n      name: contactForm.name,\n      isTerminated: contactForm.isTerminated\n    };\n\n    this.update(this.formValues);\n  }\n\n  public createForm(): any {\n    this.reactForm = this.formBuilder.group({\n      // @ts-ignore\n      id: this.editCurrentTask.id,\n      // @ts-ignore\n      name: [this.editCurrentTask.name, Validators.compose([Validators.required, Validators.minLength(5)])],\n      // @ts-ignore\n      isTerminated: this.editCurrentTask.isTerminated\n    });\n  }\n}\n\n    \n\n    \n        {{ editCurrentTask.name }}\n\n  \n  \n    Changer le nom de la tâche :  \n    \n  \n\n  \n    \n     : Tâche terminée \n  \n  Mettre à jours\n\n\n    \n\n    \n                \n                    ./edit-task.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ editCurrentTask.name }}        Changer le nom de la tâche :                   : Tâche terminée     Mettre à jours'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TimerTaskComponent', 'selector': 'app-timer-task'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITasks.html":{"url":"interfaces/ITasks.html","title":"interface - ITasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interfaces/ITasks.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        @context\n                                \n                                \n                                            Optional\n                                        @id\n                                \n                                \n                                            Optional\n                                        @type\n                                \n                                \n                                            Optional\n                                        dateEnd\n                                \n                                \n                                            Optional\n                                        dateStart\n                                \n                                \n                                            Optional\n                                        duration\n                                \n                                \n                                        id\n                                \n                                \n                                        isTerminated\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateEnd\n                                    \n                                \n                                \n                                    \n                                        dateEnd:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateStart\n                                    \n                                \n                                \n                                    \n                                        dateStart:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTerminated\n                                    \n                                \n                                \n                                    \n                                        isTerminated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITasks {\n  '@context'?: string;\n  '@id'?: string;\n  '@type'?: string;\n  id: number;\n  name: string;\n  duration?: string;\n  isTerminated: boolean;\n  dateStart?: any;\n  dateEnd?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/tasks/Tasks.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./Tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./Tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionCreate\n                            \n                            \n                                    Public\n                                actionSearch\n                            \n                            \n                                    Private\n                                arrayTasks\n                            \n                            \n                                    Public\n                                editCurrentTask\n                            \n                            \n                                    Public\n                                editTaskActive\n                            \n                            \n                                    Public\n                                tasks\n                            \n                            \n                                    Public\n                                timerCurrentTask\n                            \n                            \n                                    Public\n                                timerTaskActive\n                            \n                            \n                                    Public\n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionPrimary\n                            \n                            \n                                    Public\n                                actionPrimaryExecute\n                            \n                            \n                                    Public\n                                deleteTask\n                            \n                            \n                                    Public\n                                editTask\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                    Public\n                                multiDeletion\n                            \n                            \n                                    Public\n                                multiFinish\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                postTask\n                            \n                            \n                                    Private\n                                saerchTask\n                            \n                            \n                                    Public\n                                selectTask\n                            \n                            \n                                    Public\n                                taskIsFinish\n                            \n                            \n                                    Public\n                                taskIsTerminated\n                            \n                            \n                                    Public\n                                timerDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTasksService: DataTasksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/tasks/Tasks.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTasksService\n                                                  \n                                                        \n                                                                        DataTasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            actionPrimary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    actionPrimary(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            actionPrimaryExecute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    actionPrimaryExecute(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(task: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTask(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            multiDeletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    multiDeletion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            multiFinish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    multiFinish()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            postTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postTask(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saerchTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saerchTask(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectTask(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            taskIsFinish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    taskIsFinish(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            taskIsTerminated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    taskIsTerminated(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            timerDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    timerDialog(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            arrayTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editCurrentTask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editTaskActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITasks[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timerCurrentTask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timerTaskActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {DataTasksService} from '../../Services/data-tasks.service';\nimport {ITasks} from '../../Interfaces/ITasks';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './Tasks.component.html',\n  styleUrls: ['./Tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n  public tasks: ITasks[];\n  public values = '';\n  public editCurrentTask: any;\n  public timerCurrentTask: any;\n  public editTaskActive: boolean;\n  public timerTaskActive = false;\n  public actionCreate = true;\n  public actionSearch = false;\n  private arrayTasks: any = [];\n\n  constructor(private dataTasksService: DataTasksService) {\n  }\n\n  ngOnInit(): void {\n    this.getTasks();\n  }\n\n  public getTasks(): void {\n    this.dataTasksService.getTasks()\n      .subscribe(\n        (value: ITasks[]) => {\n          this.tasks = value;\n          this.editTaskActive = false;\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          console.log('Get task is completed !');\n        }\n      );\n  }\n\n  // tslint:disable-next-line:typedef\n  public actionPrimary(e) {\n    const valueActionPrimary = e.target.value;\n    console.log(valueActionPrimary);\n    if (valueActionPrimary === 'createTask') {\n      this.getTasks();\n      this.actionCreate = true;\n      this.actionSearch = false;\n    }\n\n    if (valueActionPrimary === 'searchTask') {\n      this.getTasks();\n      this.actionCreate = false;\n      this.actionSearch = true;\n    }\n  }\n\n\n  public actionPrimaryExecute(event: any): void {\n    if (this.actionCreate) {\n      this.postTask(event);\n    }\n\n    if (this.actionSearch) {\n      this.saerchTask(event);\n    }\n  }\n\n  private postTask(event: any): void {\n    if (event.key === 'Enter') {\n      this.values = event.target.value;\n      event.target.value = '';\n      const name = this.values.trim();\n      const isTerminated = false;\n      if (!name) {\n        return;\n      }\n      this.dataTasksService.postTask({name, isTerminated} as unknown as ITasks)\n        .subscribe(() => {\n          this.getTasks();\n        });\n    }\n  }\n\n  private saerchTask(event: any): void {\n    if (event.key === 'Enter') {\n      this.values = event.target.value;\n      event.target.value = '';\n      const name = this.values.trim();\n\n      if (!name) {\n        return;\n      }\n\n      this.dataTasksService.searchTask(this.values)\n        .subscribe(\n          // @ts-ignore\n          (value: ITasks[]) => this.tasks = value,\n          (error) => {\n            console.log(error);\n          },\n          () => {\n            console.log('completed !');\n          });\n    }\n  }\n\n  public deleteTask(task: number): void {\n    this.dataTasksService.deleteTask(task)\n      .subscribe(\n        () => {\n          this.getTasks();\n          document.getElementById('deleteMessage').style.display = 'none';\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  public multiDeletion(): void {\n    const elem: any = document.getElementsByClassName('multiDeleted');\n    document.getElementById('deleteMessage').style.display = 'inline-block';\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i  {\n          this.getTasks();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  public taskIsFinish(task: ITasks): void {\n    task.isTerminated = true;\n    this.dataTasksService.updateTask(task)\n      .subscribe(\n        () => {\n          this.getTasks();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  public selectTask(task: ITasks): void {\n    const found = this.arrayTasks.includes(task);\n    if (found) {\n      const elem = this.arrayTasks.indexOf(task);\n      console.log(this.arrayTasks.splice(elem, 1));\n    } else {\n      this.arrayTasks.push(task);\n    }\n    this.arrayTasks = [...new Set(this.arrayTasks)];\n    console.log(this.arrayTasks);\n  }\n\n  public multiFinish(): void {\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i \n    \n\n    \n        \n  \n\n  \n    \n    Create\n\n    \n    Search\n  \n\n\n\n\n\n  Delete Multiple\n  Finish tasks\n  Supression en traitement...\n\n\n\n  \n    \n  \n  \n    \n  \n  \n    \n      \n        \n        - Name : {{ task.name }}\n        - Id : {{ task.id }}\n        - Finish : {{ task.isTerminated }}\n        - Durée : {{ task.duration }}\n\n        Finish\n        Edit\n        Timer\n        Delete\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./Tasks.component.scss\n                \n                .fieldPrimary {\n  float:left;\n}\n\n.switch-field {\n  display: flex;\n  overflow: hidden;\n  float:left;\n}\n\n.switch-field input {\n  position: absolute !important;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  border: 0;\n  overflow: hidden;\n}\n\n.switch-field label {\n  background-color: #e4e4e4;\n  color: rgba(0, 0, 0, 0.6);\n  font-size: 14px;\n  line-height: 1;\n  text-align: center;\n  padding: 8px 16px;\n  margin-right: -1px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.1);\n  transition: all 0.1s ease-in-out;\n}\n\n.switch-field label:hover {\n  cursor: pointer;\n}\n\n.switch-field input:checked + label {\n  background-color: #a5dc86;\n  box-shadow: none;\n}\n\n.switch-field label:first-of-type {\n  border-radius: 4px 0 0 4px;\n}\n\n.switch-field label:last-of-type {\n  border-radius: 0 4px 4px 0;\n}\n\n/* This is just for CodePen. */\n\n.form {\n  max-width: 600px;\n  font-family: \"Lucida Grande\", Tahoma, Verdana, sans-serif;\n  font-weight: normal;\n  line-height: 1.625;\n  margin: 8px auto;\n  padding: 16px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create        Search    Delete Multiple  Finish tasks  Supression en traitement...                                            - Name : {{ task.name }}        - Id : {{ task.id }}        - Finish : {{ task.isTerminated }}        - Durée : {{ task.duration }}        Finish        Edit        Timer        Delete            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TimerTaskComponent', 'selector': 'app-timer-task'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerTaskComponent.html":{"url":"components/TimerTaskComponent.html","title":"component - TimerTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/timer-task/timer-task.component.ts\n\n\n    \n        Description\n    \n    \n        timer component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timer-task\n            \n\n            \n                styleUrls\n                ./timer-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                btnReset\n                            \n                            \n                                    Public\n                                btnStart\n                            \n                            \n                                    Public\n                                btnStop\n                            \n                            \n                                    Public\n                                heure\n                            \n                            \n                                    Public\n                                IdHeure\n                            \n                            \n                                    Public\n                                IdMinute\n                            \n                            \n                                    Public\n                                IdSeconde\n                            \n                            \n                                    Public\n                                interval\n                            \n                            \n                                    Public\n                                min\n                            \n                            \n                                    Public\n                                sec\n                            \n                            \n                                    Public\n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chronometer\n                            \n                            \n                                    Public\n                                clickResetChrono\n                            \n                            \n                                    Public\n                                clickStartChrono\n                            \n                            \n                                    Public\n                                clickStopChrono\n                            \n                            \n                                    Private\n                                Close\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                    Private\n                                iniTimer\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                play\n                            \n                            \n                                    Public\n                                resetChrono\n                            \n                            \n                                    Private\n                                restart\n                            \n                            \n                                    Private\n                                save\n                            \n                            \n                                    Public\n                                startChrono\n                            \n                            \n                                    Public\n                                stopChrono\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timerCurrentTask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateCurrentTask\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTasksService: DataTasksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/timer-task/timer-task.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTasksService\n                                                  \n                                                        \n                                                                        DataTasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timerCurrentTask\n                    \n                \n                \n                    \n                        Type :         ITasks\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateCurrentTask\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            chronometer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chronometer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickResetChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickResetChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickStartChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickStartChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickStopChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickStopChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:241\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            iniTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    iniTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Example :\n                        \n                            This is a good example\nprocessTarget(&#39;yo&#39;)\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The processed target number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            play\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    play()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            restart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(data: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            btnReset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            btnStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            btnStop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            heure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            IdHeure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            IdMinute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            IdSeconde\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sec\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITasks\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ITasks} from '../../Interfaces/ITasks';\nimport {DataTasksService} from '../../Services/data-tasks.service';\n\n/**\n * timer component\n */\n@Component({\n  selector: 'app-timer-task',\n  templateUrl: './timer-task.component.html',\n  styleUrls: ['./timer-task.component.scss']\n})\nexport class TimerTaskComponent implements OnInit {\n  @Input() timerCurrentTask: ITasks;\n  @Output() updateCurrentTask = new EventEmitter();\n  public IdSeconde: HTMLElement;\n  public IdMinute: HTMLElement;\n  public IdHeure: HTMLElement;\n  public btnStart: HTMLElement;\n  public btnStop: HTMLElement;\n  public btnReset: HTMLElement;\n  public interval = null;\n  public sec = 0;\n  public min = 0;\n  public heure = 0;\n  public task: ITasks;\n\n  constructor(private dataTasksService: DataTasksService) {\n  }\n\n  ngOnInit(): void {\n    this.IdSeconde = document.getElementById('seconde');\n    this.IdMinute = document.getElementById('minute');\n    this.IdHeure = document.getElementById('heure');\n    this.btnStart = document.getElementById('start');\n    this.btnStop = document.getElementById('stop');\n    this.btnReset = document.getElementById('reset');\n    this.task = this.timerCurrentTask;\n    this.iniTimer();\n    this.clickStartChrono();\n    this.clickStopChrono();\n    this.clickResetChrono();\n  }\n\n  /**\n   * @example\n   * This is a good example\n   * processTarget('yo')\n   *\n   * @param {string} target  The target to process see {@link Todo}\n   * @returns The processed target number\n   */\n  private iniTimer(): any {\n    let id: number;\n    id = this.timerCurrentTask.id;\n    this.dataTasksService.getTask(id)\n      .subscribe(\n        // @ts-ignore\n        (value: ITasks) => {\n          if (value.duration !== undefined) {\n            this.task.duration = value.duration;\n            let array: Array;\n            array = this.task.duration.split(':');\n            // tslint:disable-next-line:radix\n            this.heure = parseInt(array[0]);\n            // tslint:disable-next-line:radix\n            this.min = parseInt(array[1]);\n            // tslint:disable-next-line:radix\n            this.sec = parseInt(array[2]);\n            if (this.heure  {\n          console.log(error);\n        },\n        () => {\n          console.log('Get task is completed !');\n        }\n      );\n  }\n\n  update(data: ITasks): void {\n    this.dataTasksService.updateTask(data)\n      .subscribe(\n        () => {\n          this.getTasks();\n          this.updateCurrentTask.emit();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  private play(): any {\n    this.task.dateStart = new Date();\n    this.update(this.task);\n  }\n\n  private save(): any {\n    this.task.dateEnd = new Date();\n    this.task.duration = this.heure + ':' + this.min + ':' + this.sec;\n    this.update(this.task);\n  }\n\n  private restart(): any {\n    this.task.dateStart = null;\n    this.task.dateEnd = null;\n    this.task.duration = null;\n    this.update(this.task);\n  }\n\n  private Close(): any {\n    this.save();\n  }\n\n  public chronometer(): void {\n    console.log(this.heure + ':' + this.min + ':' + this.sec);\n    this.sec = this.sec + 1;\n    let displaySec: any;\n    let displayHeure;\n    if (this.sec  {\n        this.chronometer();\n      }, 1000);\n    /*\n        const myNotification = new Notification('Start Chrono', {\n            //body: 'Lorem Ipsum Dolor Sit Amet'\n        })\n        myNotification.onclick = () => {\n            console.log('Notification clicked')\n        }\n    */\n  }\n\n  public stopChrono(): void {\n    clearInterval(this.interval);\n    /*\n    const myNotification = new Notification('Stop Chrono', {\n        //body: 'Lorem Ipsum Dolor Sit Amet'\n    })\n    myNotification.onclick = () => {\n        console.log('Notification clicked')\n    }\n    */\n  }\n\n  public clickStartChrono(): void {\n    this.btnStart.addEventListener('click', () => {\n      this.startChrono();\n      this.play();\n      // @ts-ignore\n      this.btnStart.disabled = true;\n    });\n  }\n\n  public clickStopChrono(): void {\n    this.btnStop.addEventListener('click', () => {\n      this.stopChrono();\n      this.save();\n      // @ts-ignore\n      this.btnStart.disabled = false;\n    });\n\n  }\n\n  public resetChrono(): void {\n    this.sec = 0;\n    this.min = 0;\n    this.heure = 0;\n    this.IdSeconde.innerText = '00';\n    this.IdMinute.innerText = '00';\n    this.IdHeure.innerText = '00';\n  }\n\n  public clickResetChrono(): void {\n    this.btnReset.addEventListener('click', () => {\n      this.resetChrono();\n    });\n  }\n\n  public getTasks(): void {\n    // @ts-ignore\n    this.dataTasksService.getTasks()\n      .subscribe(\n        // @ts-ignore\n        (value: ITasks) => this.editCurrentTask = value,\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          console.log('completed !');\n        }\n      );\n  }\n}\n\n    \n\n    \n        timer-task works!\n\n  \n    00 : 00 : 00\n  \n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./timer-task.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'timer-task works!      00 : 00 : 00                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TimerTaskComponent', 'selector': 'app-timer-task'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Components/edit-task/edit-task.component.ts\n            \n            component\n            EditTaskComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/Components/tasks/Tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/Components/timer-task/timer-task.component.ts\n            \n            component\n            TimerTaskComponent\n            \n                3 %\n                (1/30)\n            \n        \n        \n            \n                \n                src/app/Interfaces/ITasks.ts\n            \n            interface\n            ITasks\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/Services/data-tasks.service.ts\n            \n            injectable\n            DataTasksService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTasksManagerAngular\nThis project was generated with Angular CLI version 10.1.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nAppModule -->\n\nTasksComponent->AppModule\n\n\n\n\n\nTimerTaskComponent\n\nTimerTaskComponent\n\nAppModule -->\n\nTimerTaskComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
