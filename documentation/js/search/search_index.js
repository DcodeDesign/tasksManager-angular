var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.557,1,0.776]],["body/components/AppComponent.html",[0,0.952,1,1.393,2,1.905,3,0.682,4,0.567,5,1.754,6,1.754,7,1.754,8,1.754,9,0.567,10,2.498,11,1.501,12,2.36,13,1.995,14,2.631,15,2.228,16,4.387,17,2.228,18,3.993,19,0.809,20,1.637,21,4.387,22,0.95,23,0.059,24,1.501,25,1.501,26,1.289,27,3.993,28,3.172,29,1.108,30,3.145,31,0.809,32,0.809,33,0.682,34,0.461,35,1.289,36,2.228,37,1.905,38,0.95,39,2.575,40,1.754,41,1.546,42,1.754,43,0.95,44,1.754,45,1.754,46,0.95,47,1.754,48,0.95,49,1.754,50,1.501,51,1.501,52,1.108,53,1.501,54,1.754,55,0.036,56,0.045,57,0.036]],["title/modules/AppModule.html",[58,1.434,59,1.434]],["body/modules/AppModule.html",[1,1.522,3,0.589,4,0.489,9,0.489,13,1.112,23,0.061,31,1.296,32,0.698,33,0.589,34,0.398,35,1.112,43,1.412,46,1.412,48,1.412,55,0.031,56,0.041,57,0.031,58,1.514,59,2.857,60,1.295,61,1.514,62,3.246,63,3.246,64,2.882,65,1.789,66,2.156,67,2.156,68,2.156,69,2.156,70,2.231,71,2.882,72,2.156,73,1.514,74,2.714,75,2.882,76,3.627,77,2.156,78,2.882,79,2.714,80,2.714,81,2.714,82,3.627,83,2.882,84,1.514,85,3.627,86,2.714,87,2.714,88,1.789,89,3.627,90,3.627,91,3.627,92,1.789,93,2.714,94,1.789,95,2.714,96,2.156,97,2.156,98,1.789,99,2.714,100,2.714,101,2.714,102,2.714,103,2.714]],["title/classes/AppPage.html",[34,0.377,104,1.694]],["body/classes/AppPage.html",[3,0.77,4,0.64,9,0.64,14,2.34,19,0.913,23,0.059,29,1.517,31,0.913,33,0.77,34,0.521,37,1.694,55,0.04,56,0.049,57,0.04,84,1.981,104,2.837,105,3.551,106,2.821,107,2.054,108,4.817,109,4.817,110,3.551,111,2.054,112,5.016,113,3.551,114,2.821,115,2.837,116,3.551,117,3.551,118,2.821,119,3.551]],["title/modules/AppRoutingModule.html",[58,1.434,70,1.226]],["body/modules/AppRoutingModule.html",[3,0.811,4,0.674,9,0.674,23,0.059,31,1.142,32,0.961,33,0.811,34,0.549,55,0.042,56,0.05,57,0.042,60,1.784,65,2.464,70,2.119,75,2.97,78,3.528,120,3.738,121,3.738,122,3.122,123,4.44,124,2.97,125,1.784,126,3.738]],["title/injectables/DataTasksService.html",[127,1.434,128,1.054]],["body/injectables/DataTasksService.html",[3,0.372,4,0.309,9,0.309,14,1.13,19,0.441,20,1.07,22,1.413,23,0.061,24,2.098,25,1.509,26,1.296,29,1.607,31,0.978,32,0.441,33,0.372,34,0.252,41,1.513,50,2.14,55,0.04,56,0.03,57,0.019,77,1.363,107,1.246,111,2.048,115,2.829,118,2.074,125,1.686,127,1.457,128,1.07,129,1.715,130,3.673,131,1.363,132,2.454,133,3.162,134,3.162,135,2.074,136,2.58,137,2.611,138,2.329,139,2.611,140,3.162,141,3.162,142,2.074,143,2.074,144,2.611,145,0.818,146,1.715,147,3.534,148,2.611,149,2.454,150,2.048,151,2.611,152,2.611,153,2.235,154,1.715,155,4.006,156,4.728,157,2.611,158,1.715,159,0.818,160,1.715,161,2.611,162,3.803,163,1.715,164,3.162,165,1.715,166,1.764,167,2.611,168,1.715,169,1.715,170,0.957,171,2.611,172,1.513,173,1.715,174,2.611,175,1.715,176,1.715,177,2.611,178,1.715,179,2.611,180,1.363,181,2.611,182,1.07,183,3.162,184,3.534,185,2.611,186,1.715,187,1.363,188,1.715,189,1.715,190,2.611,191,1.715,192,0.957,193,1.715,194,3.803,195,1.715,196,1.715,197,0.957,198,2.074,199,2.074,200,2.074,201,1.715,202,1.715,203,1.715,204,1.715,205,1.715,206,1.715,207,1.715,208,1.715,209,1.715,210,1.715,211,3.534,212,1.715,213,1.363,214,2.611,215,1.715,216,1.715,217,2.611,218,1.715,219,1.715,220,1.715,221,1.715,222,3.162,223,1.715,224,1.715,225,1.715,226,1.715,227,1.715,228,2.611,229,1.363,230,2.611,231,1.721,232,1.721,233,1.715,234,2.611,235,1.715,236,1.715,237,1.715,238,1.715,239,1.715,240,1.715,241,1.715,242,1.715,243,1.715,244,1.715,245,1.715,246,1.715,247,1.715,248,1.715,249,1.715]],["title/components/EditTaskComponent.html",[0,0.557,43,0.776]],["body/components/EditTaskComponent.html",[0,0.726,1,0.569,2,1.337,3,0.408,4,0.34,5,1.051,6,1.051,7,1.051,8,1.051,9,0.34,11,0.898,12,2.051,13,1.701,15,1.563,17,1.563,19,0.484,20,1.148,22,1.253,23,0.06,26,1.148,29,1.618,31,0.953,32,0.484,33,0.408,34,0.276,35,0.772,36,1.563,37,1.337,38,0.569,39,2.067,40,1.051,41,1.514,42,1.051,43,1.119,44,2.464,45,1.051,46,0.569,47,1.051,48,0.569,49,1.051,50,1.596,51,0.898,52,0.663,53,0.898,54,1.051,55,0.021,56,0.032,57,0.021,88,3.071,92,1.241,107,1.337,111,1.889,125,0.898,128,1.701,132,1.051,136,2.518,138,2.441,145,0.898,149,1.563,150,1.337,159,1.337,166,1.563,170,2.315,172,1.59,182,0.772,192,1.051,197,1.051,231,2.735,232,2.735,250,3.702,251,1.241,252,1.846,253,2.204,254,2.657,255,2.225,256,3.345,257,3.345,258,3.704,259,2.441,260,3.704,261,2.225,262,2.225,263,2.657,264,2.225,265,2.657,266,1.241,267,4.298,268,2.225,269,1.496,270,2.657,271,1.496,272,1.883,273,1.496,274,1.496,275,1.496,276,2.225,277,1.883,278,1.496,279,1.496,280,3.345,281,1.846,282,2.225,283,1.241,284,1.241,285,1.883,286,1.883,287,1.496,288,1.846,289,1.883,290,1.846,291,1.496,292,1.496,293,1.496,294,1.883,295,1.883,296,1.883,297,1.883,298,1.883,299,1.883,300,1.846,301,1.883,302,1.883,303,1.883,304,1.883,305,1.883,306,1.883,307,1.883,308,1.883,309,1.883,310,2.801,311,2.801,312,2.801,313,2.801,314,2.801,315,2.801,316,3.704,317,2.801,318,2.801,319,2.801]],["title/interfaces/ITasks.html",[172,0.906,320,1.434]],["body/interfaces/ITasks.html",[3,0.684,4,0.568,9,0.568,19,0.811,20,1.639,22,1.562,23,0.059,24,2.487,33,0.684,41,1.627,55,0.036,56,0.045,57,0.036,150,2.458,153,2.45,159,2.389,172,1.409,300,3.044,320,1.759,321,3.152,322,2.504,323,3.044,324,4.619,325,4.619,326,4.619,327,3.489]],["title/components/TasksComponent.html",[0,0.557,46,0.776]],["body/components/TasksComponent.html",[0,0.472,1,0.298,2,0.799,3,0.214,4,0.178,5,0.551,6,0.551,7,0.551,8,0.551,9,0.178,11,0.471,12,1.583,13,1.276,15,0.934,17,0.934,19,0.254,20,0.686,22,1.388,23,0.061,24,0.471,25,1.368,26,1.49,29,1.666,31,0.56,32,0.254,33,0.214,34,0.145,35,0.405,36,0.934,37,0.799,38,0.298,39,1.43,40,0.551,41,1.62,42,0.551,43,0.298,44,1.215,45,0.551,46,0.774,47,0.551,48,0.298,49,1.215,50,1.893,51,0.471,52,0.348,53,0.471,54,0.551,55,0.011,56,0.019,57,0.011,73,0.551,107,0.799,111,2.084,115,1.103,125,1.486,128,1.276,132,2.028,135,1.33,136,2.851,138,1.689,142,1.33,143,0.785,145,0.471,149,2.342,150,2.003,153,0.551,159,0.799,166,1.6,170,2.597,172,1.68,182,0.405,192,0.551,197,0.551,198,1.33,199,1.33,200,0.785,213,2.636,231,0.651,232,0.651,252,1.103,253,1.435,259,1.689,263,1.73,266,0.651,281,0.651,283,0.651,284,0.651,287,0.785,288,1.89,290,1.89,291,0.785,293,2.636,300,1.103,327,1.73,328,0.785,329,2.177,330,1.674,331,2.177,332,2.177,333,2.177,334,2.177,335,2.177,336,1.73,337,2.177,338,2.177,339,1.674,340,1.674,341,1.674,342,1.674,343,1.674,344,2.563,345,2.563,346,1.674,347,1.674,348,1.674,349,1.674,350,1.674,351,1.674,352,1.674,353,1.674,354,1.674,355,0.988,356,0.988,357,1.674,358,0.988,359,2.177,360,0.988,361,0.988,362,1.674,363,0.988,364,0.988,365,0.988,366,0.988,367,0.988,368,0.988,369,0.988,370,0.988,371,0.988,372,1.674,373,0.988,374,1.674,375,0.988,376,1.674,377,0.988,378,0.988,379,0.988,380,1.674,381,0.988,382,0.988,383,0.988,384,0.988,385,0.988,386,0.988,387,0.988,388,1.89,389,0.988,390,2.052,391,0.988,392,2.036,393,0.988,394,0.988,395,0.988,396,0.988,397,0.988,398,0.988,399,0.988,400,1.674,401,0.988,402,0.785,403,0.785,404,2.177,405,0.988,406,0.988,407,0.988,408,2.177,409,2.177,410,0.988,411,0.988,412,1.674,413,1.674,414,1.674,415,2.563,416,1.674,417,0.988,418,0.988,419,0.988,420,0.988,421,0.988,422,0.988,423,0.988,424,2.436,425,2.177,426,0.988,427,1.674,428,0.988,429,0.988,430,0.988,431,0.988,432,1.103,433,0.988,434,0.988,435,0.988,436,0.988,437,1.674,438,1.674,439,2.563,440,1.674,441,3.114,442,1.674,443,1.674,444,1.674,445,1.674,446,1.674,447,1.674,448,1.674,449,0.988,450,1.674,451,3.318,452,3.318,453,0.988,454,0.988,455,1.674,456,1.674,457,0.988,458,0.988,459,0.988,460,0.988,461,0.988,462,2.177,463,3.114,464,1.674,465,2.563,466,1.674,467,1.674,468,2.177,469,0.988,470,2.177,471,0.988,472,2.563,473,1.674,474,0.988,475,1.674,476,0.988,477,0.988,478,0.988,479,1.674,480,2.177,481,1.674,482,2.177,483,0.988,484,0.988,485,0.988,486,1.674,487,1.674,488,0.988,489,0.988,490,0.988,491,0.988,492,1.674,493,0.988,494,0.988,495,0.988,496,0.988,497,0.988,498,0.988,499,0.988,500,0.988,501,0.988,502,0.988,503,0.988,504,1.674,505,2.563,506,0.988,507,0.988,508,0.988,509,0.988,510,0.988,511,0.988,512,0.988,513,0.988,514,0.988,515,0.988,516,0.988,517,0.988,518,0.988,519,0.988,520,0.988,521,0.988,522,0.988,523,0.988,524,0.988]],["title/directives/TimerDirective.html",[38,0.776,52,0.906]],["body/directives/TimerDirective.html",[3,0.82,4,0.682,9,0.682,11,1.804,12,2.133,23,0.059,29,1.332,31,0.972,32,0.972,33,0.82,34,0.555,38,1.35,51,1.804,52,1.575,53,2.133,55,0.043,56,0.051,57,0.043,145,2.271,525,3.003,526,3.78]],["title/components/TimerTaskComponent.html",[0,0.557,48,0.776]],["body/components/TimerTaskComponent.html",[0,0.496,1,0.319,2,0.845,3,0.229,4,0.191,5,0.59,6,0.59,7,0.59,8,0.59,9,0.191,11,0.504,12,1.634,13,1.322,15,0.988,17,0.988,19,0.272,20,0.726,22,1.34,23,0.061,24,1.091,25,1.422,26,1.322,29,1.716,31,0.588,32,0.272,33,0.229,34,0.155,35,0.433,36,0.988,37,0.845,38,0.319,39,1.493,40,0.59,41,1.05,42,0.59,43,0.319,44,0.59,45,0.59,46,0.319,47,0.59,48,0.808,49,2.005,50,1.634,51,0.504,52,0.372,53,0.504,54,0.59,55,0.012,56,0.02,57,0.012,94,3.219,107,0.845,111,2.069,125,0.845,128,1.322,132,2.598,136,2.838,145,0.504,149,0.988,150,0.845,153,1.493,159,0.845,166,0.59,170,2.582,172,1.316,182,1.322,192,0.59,197,0.59,229,0.84,251,0.697,252,1.168,253,1.507,254,1.817,255,1.407,259,1.764,261,1.407,262,1.407,264,1.407,265,1.817,266,0.697,268,0.84,269,0.84,270,2.368,271,0.84,273,0.84,274,0.84,275,0.84,276,1.407,278,0.84,279,0.84,281,1.168,282,1.817,283,0.697,284,0.697,288,1.168,290,1.168,292,0.84,336,1.817,388,0.697,390,1.168,392,1.817,402,0.84,403,0.84,424,2.152,432,0.697,527,3.88,528,2.287,529,2.287,530,2.287,531,2.287,532,2.287,533,2.287,534,2.287,535,2.287,536,2.287,537,2.287,538,2.287,539,2.287,540,2.287,541,2.287,542,2.287,543,2.676,544,2.676,545,2.676,546,2.676,547,2.676,548,2.676,549,2.676,550,2.676,551,2.676,552,2.676,553,2.676,554,2.676,555,2.287,556,2.676,557,2.287,558,1.772,559,1.057,560,1.057,561,1.057,562,1.057,563,1.057,564,1.057,565,1.057,566,1.057,567,1.057,568,1.057,569,1.057,570,1.057,571,1.057,572,1.057,573,1.057,574,1.057,575,4.212,576,1.057,577,1.057,578,1.057,579,1.057,580,1.057,581,1.057,582,1.772,583,3.735,584,1.057,585,1.057,586,1.057,587,1.057,588,1.057,589,1.057,590,1.057,591,1.057,592,1.057,593,1.057,594,1.057,595,1.057,596,1.057,597,1.057,598,1.057,599,1.057,600,1.057,601,1.057,602,1.057,603,1.057,604,1.057,605,1.057,606,1.057,607,1.772,608,2.287,609,1.057,610,1.057,611,1.057,612,1.057,613,1.057,614,1.057,615,1.772,616,2.287,617,1.057,618,2.676,619,1.057,620,2.287,621,1.057,622,3.425,623,1.057,624,2.287,625,1.772,626,1.772,627,1.772,628,2.287,629,1.057,630,1.772,631,1.057,632,1.057,633,1.057,634,1.057,635,1.057,636,1.772,637,1.057,638,1.772,639,1.772,640,1.772,641,1.772,642,1.772,643,1.772,644,1.772,645,1.772,646,1.772,647,1.772,648,1.772,649,1.057,650,1.057,651,1.057,652,1.057,653,1.057,654,1.057,655,1.057,656,1.772,657,1.772,658,1.057,659,1.057,660,2.287,661,3.735,662,1.057,663,1.057,664,1.057,665,1.057,666,1.057,667,1.057,668,1.057,669,1.772,670,1.772,671,1.772]],["title/coverage.html",[672,2.778]],["body/coverage.html",[0,1.015,1,0.986,9,0.589,10,2.595,22,0.986,23,0.059,34,0.479,38,0.986,43,0.986,46,0.986,48,0.986,52,1.151,55,0.037,56,0.046,57,0.037,88,2.153,94,2.153,98,2.695,104,2.153,106,2.595,127,1.823,128,1.339,130,2.595,131,2.595,172,1.151,182,1.339,250,2.595,251,2.695,320,1.823,322,2.595,323,2.153,328,2.595,424,2.888,525,2.595,527,2.595,672,2.595,673,3.267,674,3.267,675,3.267,676,3.267,677,3.267,678,3.267,679,3.267,680,4.09,681,3.267,682,3.267,683,2.595,684,4.679,685,4.679,686,2.595,687,3.249,688,2.595,689,3.267,690,3.267]],["title/dependencies.html",[61,1.723,691,2.152]],["body/dependencies.html",[23,0.06,32,0.943,55,0.042,56,0.05,57,0.042,61,2.046,83,3.487,84,2.449,92,2.417,96,2.913,97,2.913,124,2.913,187,2.913,692,3.667,693,5.184,694,3.667,695,3.667,696,3.667,697,3.667,698,3.667,699,3.667,700,3.667,701,3.667]],["title/index.html",[19,0.553,702,2.152,703,2.152]],["body/index.html",[0,0.962,4,0.581,13,1.32,23,0.046,28,3.524,41,1.134,55,0.037,56,0.046,57,0.037,73,1.796,114,2.558,182,1.32,704,3.22,705,4.053,706,3.22,707,4.435,708,3.22,709,3.22,710,3.22,711,4.053,712,4.797,713,4.971,714,3.22,715,3.22,716,3.22,717,3.22,718,3.22,719,3.22,720,3.22,721,3.22,722,3.22,723,3.22,724,4.435,725,4.435,726,3.22,727,4.797,728,3.22,729,3.22,730,3.22,731,3.22,732,3.22,733,3.22,734,2.558,735,4.053,736,4.053,737,4.655,738,3.22,739,4.053,740,4.053,741,3.22,742,4.655,743,3.22,744,3.22,745,4.435,746,3.22,747,3.22,748,3.22,749,3.22]],["title/modules.html",[60,1.668]],["body/modules.html",[23,0.052,55,0.045,56,0.052,57,0.045,59,2.234,60,1.911,70,1.911,84,2.234,750,4.005,751,4.005,752,4.623,753,4.005,754,4.005]],["title/overview.html",[755,2.778]],["body/overview.html",[1,1.521,2,1.634,23,0.058,34,0.503,35,1.404,38,1.034,43,1.377,46,1.377,48,1.377,55,0.039,56,0.048,57,0.039,58,1.911,59,2.916,60,1.634,61,1.911,62,2.721,63,2.721,64,2.721,65,2.257,66,2.721,67,2.721,68,2.721,69,2.721,70,2.176,71,3.346,72,2.721,73,1.911,127,1.911,320,1.911,424,1.911,432,3.135,755,2.721,756,3.425,757,3.425]],["title/routes.html",[122,2.304]],["body/routes.html",[23,0.053,55,0.047,56,0.053,57,0.047,122,2.712]],["title/miscellaneous/variables.html",[758,1.709,759,2.453]],["body/miscellaneous/variables.html",[19,0.926,22,1.461,23,0.059,25,2.224,26,1.91,55,0.041,56,0.049,57,0.041,98,3.189,180,3.448,323,2.86,388,2.86,390,2.372,683,2.859,686,2.859,687,2.859,688,3.448,734,3.448,758,2.859,759,2.859,760,4.34,761,3.599,762,3.599,763,3.599,764,3.599,765,3.599]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":424,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.1",{"_index":493,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.10.2",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":495,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.2",{"_index":485,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.3",{"_index":490,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.6",{"_index":471,"title":{},"body":{"components/TasksComponent.html":{}}}],["0/1",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":661,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["1",{"_index":432,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"overview.html":{}}}],["1.625",{"_index":520,"title":{},"body":{"components/TasksComponent.html":{}}}],["10.1.5",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["10.1.6",{"_index":709,"title":{},"body":{"index.html":{}}}],["1000",{"_index":635,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["14px",{"_index":474,"title":{},"body":{"components/TasksComponent.html":{}}}],["16px",{"_index":481,"title":{},"body":{"components/TasksComponent.html":{}}}],["18px",{"_index":523,"title":{},"body":{"components/TasksComponent.html":{}}}],["1px",{"_index":463,"title":{},"body":{"components/TasksComponent.html":{}}}],["2",{"_index":756,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["255",{"_index":492,"title":{},"body":{"components/TasksComponent.html":{}}}],["3px",{"_index":489,"title":{},"body":{"components/TasksComponent.html":{}}}],["4",{"_index":757,"title":{},"body":{"overview.html":{}}}],["4px",{"_index":505,"title":{},"body":{"components/TasksComponent.html":{}}}],["6.6.0",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["600px",{"_index":510,"title":{},"body":{"components/TasksComponent.html":{}}}],["8px",{"_index":480,"title":{},"body":{"components/TasksComponent.html":{}}}],["a5dc86",{"_index":501,"title":{},"body":{"components/TasksComponent.html":{}}}],["absolute",{"_index":458,"title":{},"body":{"components/TasksComponent.html":{}}}],["accept",{"_index":185,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["actioncreate",{"_index":331,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionprimary",{"_index":339,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionprimary(e",{"_index":354,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionprimaryexecute",{"_index":340,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionprimaryexecute(event",{"_index":357,"title":{},"body":{"components/TasksComponent.html":{}}}],["actionsearch",{"_index":332,"title":{},"body":{"components/TasksComponent.html":{}}}],["actual_component",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["afterviewinit",{"_index":528,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["align",{"_index":477,"title":{},"body":{"components/TasksComponent.html":{}}}],["amet",{"_index":644,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["angular",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataTasksService.html":{}}}],["angular/compiler",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["api",{"_index":196,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["apiurltasks",{"_index":133,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"index.html":{}}}],["app.component",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":184,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["appmodule",{"_index":59,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":104,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":70,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apptimer",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{}}}],["array",{"_index":392,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["arrayopentimer",{"_index":333,"title":{},"body":{"components/TasksComponent.html":{}}}],["arraytasks",{"_index":334,"title":{},"body":{"components/TasksComponent.html":{}}}],["artifacts",{"_index":728,"title":{},"body":{"index.html":{}}}],["atid",{"_index":155,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["atid.split('/').pop",{"_index":230,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["auto",{"_index":521,"title":{},"body":{"components/TasksComponent.html":{}}}],["automatically",{"_index":718,"title":{},"body":{"index.html":{}}}],["available",{"_index":754,"title":{},"body":{"modules.html":{}}}],["background",{"_index":467,"title":{},"body":{"components/TasksComponent.html":{}}}],["body",{"_index":639,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["boolean",{"_index":327,"title":{},"body":{"interfaces/ITasks.html":{},"components/TasksComponent.html":{}}}],["bootstrap",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":465,"title":{},"body":{"components/TasksComponent.html":{}}}],["bottom",{"_index":524,"title":{},"body":{"components/TasksComponent.html":{}}}],["box",{"_index":486,"title":{},"body":{"components/TasksComponent.html":{}}}],["browse",{"_index":752,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":116,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["btnclose",{"_index":530,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["btnreset",{"_index":531,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["btnstart",{"_index":532,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["btnstop",{"_index":533,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["build",{"_index":727,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":188,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('delete",{"_index":244,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('gettasks",{"_index":220,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('post",{"_index":227,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('search",{"_index":249,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror('updatetask",{"_index":240,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["catcherror(this.handleerror(`get",{"_index":215,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["center",{"_index":478,"title":{},"body":{"components/TasksComponent.html":{}}}],["change",{"_index":720,"title":{},"body":{"index.html":{}}}],["changer",{"_index":311,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["check",{"_index":748,"title":{},"body":{"index.html":{}}}],["chrono",{"_index":638,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["chronometer",{"_index":543,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["class",{"_index":34,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":105,"title":{},"body":{"classes/AppPage.html":{}}}],["clearinterval(this.interval",{"_index":648,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["cli",{"_index":707,"title":{},"body":{"index.html":{}}}],["clickclosechrono",{"_index":544,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["clicked",{"_index":647,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["clickresetchrono",{"_index":545,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["clickstartchrono",{"_index":546,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["clickstopchrono",{"_index":547,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["clip",{"_index":460,"title":{},"body":{"components/TasksComponent.html":{}}}],["close",{"_index":671,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["closecurrenttask",{"_index":557,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["closedialogclose",{"_index":534,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["closetimer",{"_index":341,"title":{},"body":{"components/TasksComponent.html":{}}}],["closetimer(task",{"_index":360,"title":{},"body":{"components/TasksComponent.html":{}}}],["cluster_appmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":722,"title":{},"body":{"index.html":{}}}],["codepen",{"_index":507,"title":{},"body":{"components/TasksComponent.html":{}}}],["color",{"_index":468,"title":{},"body":{"components/TasksComponent.html":{}}}],["completed",{"_index":403,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"overview.html":{}}}],["components/edit",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tasks/tasks.component",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["components/timer",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["console",{"_index":203,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["console.error(error",{"_index":202,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["console.log('close",{"_index":668,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["console.log('completed",{"_index":291,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["console.log('get",{"_index":402,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["console.log('notification",{"_index":646,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["console.log(`${message",{"_index":201,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["console.log(`fetched",{"_index":212,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["console.log(error",{"_index":290,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["console.log(this.arraytasks",{"_index":436,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.log(this.arraytasks.splice(elem",{"_index":431,"title":{},"body":{"components/TasksComponent.html":{}}}],["console.log(this.idtimer",{"_index":591,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["console.log(this.sec",{"_index":629,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["console.log(valueactionprimary",{"_index":406,"title":{},"body":{"components/TasksComponent.html":{}}}],["const",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{}}}],["constructor(datatasksservice",{"_index":266,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["constructor(http",{"_index":146,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["constructor(private",{"_index":197,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["contactform",{"_index":295,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["contactform.id",{"_index":298,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["contactform.isterminated",{"_index":301,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["contactform.name",{"_index":299,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["content",{"_index":118,"title":{},"body":{"classes/AppPage.html":{},"injectables/DataTasksService.html":{}}}],["context",{"_index":323,"title":{},"body":{"interfaces/ITasks.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":672,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":437,"title":{},"body":{"components/TasksComponent.html":{}}}],["createform",{"_index":258,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["createtask",{"_index":407,"title":{},"body":{"components/TasksComponent.html":{}}}],["cursor",{"_index":498,"title":{},"body":{"components/TasksComponent.html":{}}}],["data",{"_index":278,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["data['hydra:member",{"_index":219,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice",{"_index":128,"title":{"injectables/DataTasksService.html":{}},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["datatasksservice.log(`${operation",{"_index":205,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice.log(`deleted",{"_index":242,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice.log(`post",{"_index":224,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice.log(`search",{"_index":247,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["datatasksservice.log(`updated",{"_index":237,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["date",{"_index":627,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["dateend",{"_index":324,"title":{},"body":{"interfaces/ITasks.html":{}}}],["datestart",{"_index":325,"title":{},"body":{"interfaces/ITasks.html":{}}}],["de",{"_index":314,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["declarations",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{}}}],["delete",{"_index":439,"title":{},"body":{"components/TasksComponent.html":{}}}],["deletetask",{"_index":135,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["deletetask(atid",{"_index":152,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["deletetask(task",{"_index":362,"title":{},"body":{"components/TasksComponent.html":{}}}],["dependencies",{"_index":61,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":715,"title":{},"body":{"index.html":{}}}],["development",{"_index":710,"title":{},"body":{"index.html":{}}}],["directive",{"_index":38,"title":{"directives/TimerDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":726,"title":{},"body":{"index.html":{}}}],["directory",{"_index":731,"title":{},"body":{"index.html":{}}}],["display",{"_index":453,"title":{},"body":{"components/TasksComponent.html":{}}}],["displayheure",{"_index":633,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["displaymin",{"_index":632,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["displaysec",{"_index":631,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["dist",{"_index":730,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(`${this.task.id",{"_index":590,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["documentation",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":642,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["duration",{"_index":326,"title":{},"body":{"interfaces/ITasks.html":{}}}],["durée",{"_index":447,"title":{},"body":{"components/TasksComponent.html":{}}}],["dynamic",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":356,"title":{},"body":{"components/TasksComponent.html":{}}}],["e.target.value",{"_index":405,"title":{},"body":{"components/TasksComponent.html":{}}}],["e2e",{"_index":743,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":106,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":113,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":110,"title":{},"body":{"classes/AppPage.html":{}}}],["e4e4e4",{"_index":469,"title":{},"body":{"components/TasksComponent.html":{}}}],["ease",{"_index":496,"title":{},"body":{"components/TasksComponent.html":{}}}],["edit",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["editcurrenttask",{"_index":263,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["editcurrenttask.name",{"_index":310,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["edittask",{"_index":342,"title":{},"body":{"components/TasksComponent.html":{}}}],["edittask(task",{"_index":364,"title":{},"body":{"components/TasksComponent.html":{}}}],["edittaskactive",{"_index":335,"title":{},"body":{"components/TasksComponent.html":{}}}],["edittaskcomponent",{"_index":43,"title":{"components/EditTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["elem",{"_index":429,"title":{},"body":{"components/TasksComponent.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["element(by.css('app",{"_index":117,"title":{},"body":{"classes/AppPage.html":{}}}],["en",{"_index":443,"title":{},"body":{"components/TasksComponent.html":{}}}],["enabled",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":742,"title":{},"body":{"index.html":{}}}],["enter",{"_index":413,"title":{},"body":{"components/TasksComponent.html":{}}}],["environment",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":166,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["error.message",{"_index":207,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["event",{"_index":359,"title":{},"body":{"components/TasksComponent.html":{}}}],["event.key",{"_index":412,"title":{},"body":{"components/TasksComponent.html":{}}}],["event.target.value",{"_index":415,"title":{},"body":{"components/TasksComponent.html":{}}}],["eventemitter",{"_index":270,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["execute",{"_index":739,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{}}}],["exports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["failed",{"_index":206,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["false",{"_index":390,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":511,"title":{},"body":{"components/TasksComponent.html":{}}}],["field",{"_index":452,"title":{},"body":{"components/TasksComponent.html":{}}}],["fieldprimary",{"_index":449,"title":{},"body":{"components/TasksComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["files",{"_index":721,"title":{},"body":{"index.html":{}}}],["finish",{"_index":441,"title":{},"body":{"components/TasksComponent.html":{}}}],["flag",{"_index":733,"title":{},"body":{"index.html":{}}}],["flex",{"_index":454,"title":{},"body":{"components/TasksComponent.html":{}}}],["float:left",{"_index":450,"title":{},"body":{"components/TasksComponent.html":{}}}],["font",{"_index":472,"title":{},"body":{"components/TasksComponent.html":{}}}],["form",{"_index":508,"title":{},"body":{"components/TasksComponent.html":{}}}],["formbuilder",{"_index":267,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formgroup",{"_index":280,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formsmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["formvalues",{"_index":256,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["found",{"_index":427,"title":{},"body":{"components/TasksComponent.html":{}}}],["further",{"_index":744,"title":{},"body":{"index.html":{}}}],["generate",{"_index":724,"title":{},"body":{"index.html":{}}}],["generated",{"_index":706,"title":{},"body":{"index.html":{}}}],["getid",{"_index":343,"title":{},"body":{"components/TasksComponent.html":{}}}],["getid(task",{"_index":366,"title":{},"body":{"components/TasksComponent.html":{}}}],["gettask",{"_index":137,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["gettask(id",{"_index":157,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["gettasks",{"_index":138,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["getting",{"_index":702,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":108,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":747,"title":{},"body":{"index.html":{}}}],["grande",{"_index":513,"title":{},"body":{"components/TasksComponent.html":{}}}],["graph",{"_index":753,"title":{},"body":{"modules.html":{}}}],["h2",{"_index":522,"title":{},"body":{"components/TasksComponent.html":{}}}],["handleerror",{"_index":139,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["handleerror(operation",{"_index":161,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["headers",{"_index":181,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["height",{"_index":462,"title":{},"body":{"components/TasksComponent.html":{}}}],["help",{"_index":745,"title":{},"body":{"index.html":{}}}],["heure",{"_index":535,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["hidden",{"_index":456,"title":{},"body":{"components/TasksComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["htmlcollectionof",{"_index":575,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["htmlelement",{"_index":582,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["htmlelement).innertext",{"_index":660,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["http",{"_index":151,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["http://127.0.0.1:8000/api/tasks",{"_index":179,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["http://localhost:4200",{"_index":717,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":147,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["httpclientmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":183,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["httpoptions",{"_index":134,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["id",{"_index":159,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["id=${atid",{"_index":243,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["id=${id",{"_index":214,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["id=${newtask.id",{"_index":226,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["id=${task.id",{"_index":239,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["identifier",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["idheure",{"_index":536,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["idminute",{"_index":537,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["idseconde",{"_index":538,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["idtimer",{"_index":539,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["ignore",{"_index":232,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["implements",{"_index":252,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{}}}],["important",{"_index":459,"title":{},"body":{"components/TasksComponent.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{}}}],["initimer",{"_index":548,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["injectable",{"_index":127,"title":{"injectables/DataTasksService.html":{}},"body":{"injectables/DataTasksService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":129,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["input",{"_index":281,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["input:checked",{"_index":500,"title":{},"body":{"components/TasksComponent.html":{}}}],["inputs",{"_index":262,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["inset",{"_index":488,"title":{},"body":{"components/TasksComponent.html":{}}}],["instead",{"_index":204,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["interface",{"_index":320,"title":{"interfaces/ITasks.html":{}},"body":{"interfaces/ITasks.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":321,"title":{},"body":{"interfaces/ITasks.html":{}}}],["interfaces/itasks",{"_index":192,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["interval",{"_index":540,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["ipsum",{"_index":641,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["isterminated",{"_index":300,"title":{},"body":{"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{}}}],["itasks",{"_index":172,"title":{"interfaces/ITasks.html":{}},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["jours",{"_index":319,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["karma",{"_index":741,"title":{},"body":{"index.html":{}}}],["la",{"_index":315,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["label",{"_index":466,"title":{},"body":{"components/TasksComponent.html":{}}}],["label:first",{"_index":503,"title":{},"body":{"components/TasksComponent.html":{}}}],["label:hover",{"_index":497,"title":{},"body":{"components/TasksComponent.html":{}}}],["label:last",{"_index":506,"title":{},"body":{"components/TasksComponent.html":{}}}],["le",{"_index":312,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"overview.html":{}}}],["line",{"_index":475,"title":{},"body":{"components/TasksComponent.html":{}}}],["line:prefer",{"_index":423,"title":{},"body":{"components/TasksComponent.html":{}}}],["line:typedef",{"_index":200,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["literal",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":141,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["log(message",{"_index":167,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["lorem",{"_index":640,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["lucida",{"_index":512,"title":{},"body":{"components/TasksComponent.html":{}}}],["map",{"_index":189,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["map(data",{"_index":218,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["margin",{"_index":482,"title":{},"body":{"components/TasksComponent.html":{}}}],["matching",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":509,"title":{},"body":{"components/TasksComponent.html":{}}}],["message",{"_index":169,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{}}}],["methods",{"_index":107,"title":{},"body":{"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["mettre",{"_index":318,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["min",{"_index":541,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["miscellaneous",{"_index":758,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":58,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":60,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":746,"title":{},"body":{"index.html":{}}}],["multideletion",{"_index":344,"title":{},"body":{"components/TasksComponent.html":{}}}],["multifinish",{"_index":345,"title":{},"body":{"components/TasksComponent.html":{}}}],["multiple",{"_index":440,"title":{},"body":{"components/TasksComponent.html":{}}}],["mynotification",{"_index":636,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["mynotification.onclick",{"_index":645,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"index.html":{}}}],["name=${searchitem",{"_index":248,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["navigate",{"_index":716,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":109,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":182,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":199,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["ng",{"_index":713,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":549,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["ngmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":550,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["ngoninit",{"_index":259,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["nom",{"_index":313,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["none",{"_index":502,"title":{},"body":{"components/TasksComponent.html":{}}}],["normal",{"_index":519,"title":{},"body":{"components/TasksComponent.html":{}}}],["notification('start",{"_index":637,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["notification('stop",{"_index":649,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["null",{"_index":583,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["number",{"_index":153,"title":{},"body":{"injectables/DataTasksService.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["object",{"_index":180,"title":{},"body":{"injectables/DataTasksService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":156,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["of(result",{"_index":208,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["ondestroy",{"_index":529,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["oninit",{"_index":253,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["onsubmit",{"_index":260,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["operation",{"_index":164,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["optional",{"_index":150,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["out",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"components/TasksComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":282,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["outputs",{"_index":264,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["overflow",{"_index":455,"title":{},"body":{"components/TasksComponent.html":{}}}],["overview",{"_index":755,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":691,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":479,"title":{},"body":{"components/TasksComponent.html":{}}}],["parameters",{"_index":149,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["parseint(array[0",{"_index":619,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["parseint(array[1",{"_index":621,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["parseint(array[2",{"_index":623,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["pipe",{"_index":217,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["play",{"_index":551,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["pointer",{"_index":499,"title":{},"body":{"components/TasksComponent.html":{}}}],["position",{"_index":457,"title":{},"body":{"components/TasksComponent.html":{}}}],["posttask",{"_index":142,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["posttask(event",{"_index":372,"title":{},"body":{"components/TasksComponent.html":{}}}],["posttask(task",{"_index":171,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["private",{"_index":132,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["prod",{"_index":732,"title":{},"body":{"index.html":{}}}],["production",{"_index":734,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":705,"title":{},"body":{"index.html":{}}}],["promise",{"_index":112,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["protractor",{"_index":114,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":193,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["providers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":136,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["radius",{"_index":504,"title":{},"body":{"components/TasksComponent.html":{}}}],["reactform",{"_index":257,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["reactiveformsmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":749,"title":{},"body":{"index.html":{}}}],["rect(0",{"_index":461,"title":{},"body":{"components/TasksComponent.html":{}}}],["reload",{"_index":719,"title":{},"body":{"index.html":{}}}],["require",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetchrono",{"_index":552,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["restart",{"_index":553,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["result",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":115,"title":{},"body":{"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["returns",{"_index":111,"title":{},"body":{"classes/AppPage.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["rgba(0",{"_index":470,"title":{},"body":{"components/TasksComponent.html":{}}}],["rgba(255",{"_index":491,"title":{},"body":{"components/TasksComponent.html":{}}}],["right",{"_index":483,"title":{},"body":{"components/TasksComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DataTasksService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["routermodule",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":122,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":712,"title":{},"body":{"index.html":{}}}],["running",{"_index":735,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":187,"title":{},"body":{"injectables/DataTasksService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":191,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["saerchtask",{"_index":346,"title":{},"body":{"components/TasksComponent.html":{}}}],["saerchtask(event",{"_index":374,"title":{},"body":{"components/TasksComponent.html":{}}}],["sans",{"_index":516,"title":{},"body":{"components/TasksComponent.html":{}}}],["save",{"_index":554,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["scaffolding",{"_index":723,"title":{},"body":{"index.html":{}}}],["search",{"_index":438,"title":{},"body":{"components/TasksComponent.html":{}}}],["searchitem",{"_index":176,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["searchtask",{"_index":143,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["searchtask(searchitem",{"_index":174,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["sec",{"_index":542,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{}}}],["selecttask",{"_index":347,"title":{},"body":{"components/TasksComponent.html":{}}}],["selecttask(task",{"_index":376,"title":{},"body":{"components/TasksComponent.html":{}}}],["selecttimers",{"_index":348,"title":{},"body":{"components/TasksComponent.html":{}}}],["selecttimers(task",{"_index":378,"title":{},"body":{"components/TasksComponent.html":{}}}],["serif",{"_index":517,"title":{},"body":{"components/TasksComponent.html":{}}}],["serve",{"_index":714,"title":{},"body":{"index.html":{}}}],["server",{"_index":711,"title":{},"body":{"index.html":{}}}],["services/data",{"_index":283,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["serviceworkermodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["set(this.arraytasks",{"_index":435,"title":{},"body":{"components/TasksComponent.html":{}}}],["shadow",{"_index":487,"title":{},"body":{"components/TasksComponent.html":{}}}],["sit",{"_index":643,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["size",{"_index":473,"title":{},"body":{"components/TasksComponent.html":{}}}],["solid",{"_index":484,"title":{},"body":{"components/TasksComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"index.html":{}}}],["span')).gettext",{"_index":119,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/edit",{"_index":250,"title":{},"body":{"components/EditTaskComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/tasks.component.ts",{"_index":328,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/tasks.component.ts:11",{"_index":397,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:112",{"_index":363,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:12",{"_index":394,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:127",{"_index":369,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:13",{"_index":393,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:134",{"_index":365,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:14",{"_index":399,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:140",{"_index":367,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:144",{"_index":383,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:15",{"_index":395,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:157",{"_index":381,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:16",{"_index":398,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:17",{"_index":389,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:170",{"_index":377,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:18",{"_index":391,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:182",{"_index":370,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:188",{"_index":385,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:19",{"_index":396,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:195",{"_index":379,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:20",{"_index":353,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:207",{"_index":387,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:216",{"_index":361,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:25",{"_index":371,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:29",{"_index":368,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:46",{"_index":355,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:63",{"_index":358,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:73",{"_index":373,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/tasks/tasks.component.ts:89",{"_index":375,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/timer",{"_index":527,"title":{},"body":{"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["src/app/directives/timer.directive.ts",{"_index":525,"title":{},"body":{"directives/TimerDirective.html":{},"coverage.html":{}}}],["src/app/directives/timer.directive.ts:6",{"_index":526,"title":{},"body":{"directives/TimerDirective.html":{}}}],["src/app/interfaces/itasks.ts",{"_index":322,"title":{},"body":{"interfaces/ITasks.html":{},"coverage.html":{}}}],["src/app/services/data",{"_index":130,"title":{},"body":{"injectables/DataTasksService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["startchrono",{"_index":555,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["started",{"_index":703,"title":{"index.html":{}},"body":{}}],["statements",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":140,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["stopchrono",{"_index":556,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["stored",{"_index":729,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["string(true",{"_index":608,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["subscribe",{"_index":288,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["support",{"_index":750,"title":{},"body":{"modules.html":{}}}],["supression",{"_index":442,"title":{},"body":{"components/TasksComponent.html":{}}}],["svg",{"_index":751,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":451,"title":{},"body":{"components/TasksComponent.html":{}}}],["t",{"_index":162,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["table",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["tahoma",{"_index":514,"title":{},"body":{"components/TasksComponent.html":{}}}],["tap",{"_index":190,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tap((newtask",{"_index":223,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tap(_",{"_index":211,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["task",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["task.component.html",{"_index":255,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.scss",{"_index":254,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts",{"_index":251,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:11",{"_index":559,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:113",{"_index":568,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:118",{"_index":571,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:12",{"_index":269,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:13",{"_index":271,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:131",{"_index":570,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:138",{"_index":560,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:14",{"_index":279,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:15",{"_index":268,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:16",{"_index":581,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:17",{"_index":580,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:173",{"_index":572,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:18",{"_index":578,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:187",{"_index":573,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:19",{"_index":579,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:199",{"_index":563,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:20",{"_index":577,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:208",{"_index":564,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:21",{"_index":576,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:217",{"_index":569,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:22",{"_index":274,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:227",{"_index":562,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:23",{"_index":584,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:233",{"_index":561,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:24",{"_index":586,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:241",{"_index":566,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:25",{"_index":585,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:26",{"_index":273,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:27",{"_index":558,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:32",{"_index":567,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:36",{"_index":565,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.component.ts:41",{"_index":277,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:54",{"_index":275,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["task.component.ts:66",{"_index":272,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:99",{"_index":574,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["task.duration",{"_index":448,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.id",{"_index":446,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.id.tostring",{"_index":233,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["task.isterminated",{"_index":425,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.name",{"_index":445,"title":{},"body":{"components/TasksComponent.html":{}}}],["task/edit",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"coverage.html":{}}}],["task/timer",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["task['@id",{"_index":228,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["taskisfinish",{"_index":349,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskisfinish(task",{"_index":380,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskisterminated",{"_index":350,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskisterminated(task",{"_index":382,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks",{"_index":213,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["tasks'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["tasks.component.html",{"_index":330,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":329,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.service",{"_index":284,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["tasks.service.ts",{"_index":131,"title":{},"body":{"injectables/DataTasksService.html":{},"coverage.html":{}}}],["tasks.service.ts:11",{"_index":148,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:15",{"_index":186,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:23",{"_index":168,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:28",{"_index":163,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:36",{"_index":158,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:44",{"_index":160,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:56",{"_index":173,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:63",{"_index":178,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:83",{"_index":154,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["tasks.service.ts:92",{"_index":175,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["taskscomponent",{"_index":46,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasksmanager",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["tasksmanagerangular",{"_index":704,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["terminée",{"_index":317,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["test",{"_index":738,"title":{},"body":{"index.html":{}}}],["tests",{"_index":737,"title":{},"body":{"index.html":{}}}],["text",{"_index":476,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.actioncreate",{"_index":408,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.actionsearch",{"_index":409,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.apiurltasks}/${atid",{"_index":234,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.apiurltasks}/${id",{"_index":209,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.apiurltasks}?name=${searchitem",{"_index":245,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.arraytasks",{"_index":434,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.arraytasks.includes(task",{"_index":428,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.arraytasks.indexof(task",{"_index":430,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.arraytasks.push(task",{"_index":433,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.btnclose",{"_index":604,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnclose[0].addeventlistener('click",{"_index":667,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnreset",{"_index":602,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnreset[0].addeventlistener('click",{"_index":665,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstart",{"_index":598,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstart[0].addeventlistener('click",{"_index":650,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstart[0].removeattribute('disabled",{"_index":658,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstart[0].setattribute('disabled",{"_index":651,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstop",{"_index":600,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstop[0].addeventlistener('click",{"_index":655,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstop[0].removeattribute('disabled",{"_index":652,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.btnstop[0].setattribute('disabled",{"_index":607,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.chronometer",{"_index":634,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.clickclosechrono",{"_index":612,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.clickresetchrono",{"_index":611,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.clickstartchrono",{"_index":609,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.clickstopchrono",{"_index":610,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.closecurrenttask.emit(this.task",{"_index":625,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.closedialogclose",{"_index":624,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.createform",{"_index":286,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.datatasksservice.deletetask(task.id",{"_index":420,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.datatasksservice.gettask(id",{"_index":614,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.datatasksservice.gettasks",{"_index":287,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.datatasksservice.posttask({name",{"_index":417,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.datatasksservice.searchtask(this.values",{"_index":419,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.datatasksservice.updatetask(data",{"_index":292,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["this.datatasksservice.updatetask(task",{"_index":426,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.editcurrenttask",{"_index":289,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.editcurrenttask.id",{"_index":305,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.editcurrenttask.isterminated",{"_index":309,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.editcurrenttask.name",{"_index":306,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.edittaskactive",{"_index":401,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.formbuilder.group",{"_index":304,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.formvalues",{"_index":297,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.gettasks",{"_index":293,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.heure",{"_index":618,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.http.delete(url",{"_index":241,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.get(this.apiurltasks",{"_index":216,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.get(url",{"_index":246,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.get(url).pipe",{"_index":210,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.post(this.apiurltasks",{"_index":221,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.http.put(url",{"_index":235,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.httpoptions",{"_index":236,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.httpoptions).pipe",{"_index":222,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["this.idheure",{"_index":596,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idheure[0",{"_index":663,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idminute",{"_index":594,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idminute[0",{"_index":662,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idseconde",{"_index":592,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idseconde[0",{"_index":659,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idtimer",{"_index":589,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idtimer.getelementsbyclassname('close",{"_index":605,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idtimer.getelementsbyclassname('heure",{"_index":597,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idtimer.getelementsbyclassname('minute",{"_index":595,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idtimer.getelementsbyclassname('reset",{"_index":603,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idtimer.getelementsbyclassname('seconde",{"_index":593,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idtimer.getelementsbyclassname('start",{"_index":599,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.idtimer.getelementsbyclassname('stop",{"_index":601,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.initimer",{"_index":606,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.min",{"_index":620,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.play",{"_index":654,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.posttask(event",{"_index":410,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.reactform",{"_index":303,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.reactform.value",{"_index":296,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.resetchrono",{"_index":666,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.restart",{"_index":664,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.saerchtask(event",{"_index":411,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.save",{"_index":657,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.sec",{"_index":622,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.selecttimers(task",{"_index":422,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.startchrono",{"_index":653,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.stopchrono",{"_index":656,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task",{"_index":587,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task.dateend",{"_index":630,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task.datestart",{"_index":626,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task.duration",{"_index":616,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.task.duration.split",{"_index":617,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.tasks",{"_index":400,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.timercurrenttask",{"_index":588,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.timercurrenttask.id",{"_index":613,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.timerisopen(task",{"_index":421,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.update(this.formvalues",{"_index":302,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.update(this.task",{"_index":628,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["this.updatecurrenttask.emit",{"_index":294,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.values",{"_index":414,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.values.trim",{"_index":416,"title":{},"body":{"components/TasksComponent.html":{}}}],["timer",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["timercurrenttask",{"_index":336,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["timercurrenttask.id",{"_index":669,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["timercurrenttask.name",{"_index":670,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["timerdialog",{"_index":351,"title":{},"body":{"components/TasksComponent.html":{}}}],["timerdialog(task",{"_index":384,"title":{},"body":{"components/TasksComponent.html":{}}}],["timerdirective",{"_index":52,"title":{"directives/TimerDirective.html":{}},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"directives/TimerDirective.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{}}}],["timerisopen",{"_index":352,"title":{},"body":{"components/TasksComponent.html":{}}}],["timerisopen(task",{"_index":386,"title":{},"body":{"components/TasksComponent.html":{}}}],["timertaskactive",{"_index":337,"title":{},"body":{"components/TasksComponent.html":{}}}],["timertaskcomponent",{"_index":48,"title":{"components/TimerTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"overview.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":238,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["traitement",{"_index":444,"title":{},"body":{"components/TasksComponent.html":{}}}],["transition",{"_index":494,"title":{},"body":{"components/TasksComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["true",{"_index":388,"title":{},"body":{"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":231,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["tslib",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":198,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TasksComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITasks.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tâche",{"_index":316,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["undefined",{"_index":229,"title":{},"body":{"injectables/DataTasksService.html":{},"components/TimerTaskComponent.html":{}}}],["unit",{"_index":736,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":418,"title":{},"body":{"components/TasksComponent.html":{}}}],["update",{"_index":261,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["update(data",{"_index":276,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["updatecurrenttask",{"_index":265,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TimerTaskComponent.html":{}}}],["updatetask",{"_index":144,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["updatetask(task",{"_index":177,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["url",{"_index":194,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["use",{"_index":725,"title":{},"body":{"index.html":{}}}],["validators",{"_index":285,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["validators.compose([validators.required",{"_index":307,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["validators.minlength(5",{"_index":308,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["value.duration",{"_index":615,"title":{},"body":{"components/TimerTaskComponent.html":{}}}],["valueactionprimary",{"_index":404,"title":{},"body":{"components/TasksComponent.html":{}}}],["values",{"_index":338,"title":{},"body":{"components/TasksComponent.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["variable",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":759,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdana",{"_index":515,"title":{},"body":{"components/TasksComponent.html":{}}}],["version",{"_index":708,"title":{},"body":{"index.html":{}}}],["via",{"_index":740,"title":{},"body":{"index.html":{}}}],["void",{"_index":170,"title":{},"body":{"injectables/DataTasksService.html":{},"components/EditTaskComponent.html":{},"components/TasksComponent.html":{},"components/TimerTaskComponent.html":{}}}],["w",{"_index":225,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["web",{"_index":195,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["weight",{"_index":518,"title":{},"body":{"components/TasksComponent.html":{}}}],["width",{"_index":464,"title":{},"body":{"components/TasksComponent.html":{}}}],["worker",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["yes",{"_index":165,"title":{},"body":{"injectables/DataTasksService.html":{}}}],["zone.js",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tasksManager-angular'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tasksManager-angular';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TimerTaskComponent', 'selector': 'app-timer-task'}];\n    var DIRECTIVES = [{'name': 'TimerDirective', 'selector': '[appTimer]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nAppModule -->\n\nTasksComponent->AppModule\n\n\n\n\n\nTimerTaskComponent\n\nTimerTaskComponent\n\nAppModule -->\n\nTimerTaskComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            EditTaskComponent\n                        \n                        \n                            TasksComponent\n                        \n                        \n                            TimerTaskComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { TasksComponent } from './Components/tasks/Tasks.component';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EditTaskComponent } from './Components/edit-task/edit-task.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TimerTaskComponent } from './Components/timer-task/timer-task.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    TasksComponent,\n    AppComponent,\n    EditTaskComponent,\n    TimerTaskComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataTasksService.html":{"url":"injectables/DataTasksService.html","title":"injectable - DataTasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataTasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/data-tasks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrlTasks\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                    Public\n                                getTask\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                    Static\n                                log\n                            \n                            \n                                    Public\n                                postTask\n                            \n                            \n                                searchTask\n                            \n                            \n                                    Public\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/data-tasks.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(atId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    atId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTask(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:28\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postTask(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchTask\n                        \n                        \n                    \n                \n            \n            \n                \nsearchTask(searchItem: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchItem\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTask(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/data-tasks.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrlTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/tasks'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Services/data-tasks.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Services/data-tasks.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {ITasks} from '../Interfaces/ITasks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataTasksService {\n  private apiUrlTasks = 'http://127.0.0.1:8000/api/tasks';  // URL to web api\n  constructor(private http: HttpClient) {\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    })\n  };\n\n  // tslint:disable-next-line:typedef\n  private static log(message: string) {\n    console.log(`${message}`);\n  }\n\n  // tslint:disable-next-line:typedef\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      console.error(error); // log to console instead\n      DataTasksService.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n\n  public getTask(id: number): Observable {\n    const url = `${this.apiUrlTasks}/${id}`;\n    return this.http.get(url).pipe(\n      tap(_ => console.log(`fetched tasks id=${id}`)),\n      catchError(this.handleError(`get Task id=${id}`))\n    );\n  }\n\n  public getTasks(): Observable {\n    return this.http.get(this.apiUrlTasks)\n      .pipe(\n        map(data => data['hydra:member'],\n          tap(() => {\n              catchError(this.handleError('getTasks', []));\n            },\n          )\n        )\n      );\n  }\n\n  public postTask(task: ITasks): Observable {\n    return this.http.post(this.apiUrlTasks, task, this.httpOptions).pipe(\n      tap((newTask: ITasks) => DataTasksService.log(`Post w/ id=${newTask.id}`)),\n      catchError(this.handleError('post Task'))\n    );\n  }\n\n  public updateTask(task: ITasks): Observable {\n    let atId;\n    if (task['@id'] !== undefined) {\n      atId = task['@id'];\n      atId = atId.split('/').pop();\n    } else {\n      // @ts-ignore\n      atId = task.id.toString();\n      atId = atId.split('/').pop();\n    }\n\n    const url = `${this.apiUrlTasks}/${atId}`;\n    return this.http.put(url, task, this.httpOptions)\n      .pipe(\n        // @ts-ignore\n        tap(_ => DataTasksService.log(`updated todo id=${task.id}`)),\n        catchError(this.handleError('updateTask'))\n      );\n  }\n\n  deleteTask(atId: number): Observable {\n    const url = `${this.apiUrlTasks}/${atId}`;\n\n    return this.http.delete(url, this.httpOptions).pipe(\n      tap(_ => DataTasksService.log(`deleted task id=${atId}`)),\n      catchError(this.handleError('delete task'))\n    );\n  }\n\n  searchTask(searchItem: string): Observable {\n    const url = `${this.apiUrlTasks}?name=${searchItem}`;\n    return this.http.get(url , this.httpOptions).pipe(\n      tap(_ => DataTasksService.log(`Search task name=${searchItem}`)),\n      catchError(this.handleError('Search task error'))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTaskComponent.html":{"url":"components/EditTaskComponent.html","title":"component - EditTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/edit-task/edit-task.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-task\n            \n\n            \n                styleUrls\n                ./edit-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formValues\n                            \n                            \n                                reactForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createForm\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editCurrentTask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateCurrentTask\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTasksService: DataTasksService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/edit-task/edit-task.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTasksService\n                                                  \n                                                        \n                                                                        DataTasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editCurrentTask\n                    \n                \n                \n                    \n                        Type :         ITasks\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/edit-task/edit-task.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateCurrentTask\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/edit-task/edit-task.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(data: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/edit-task/edit-task.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITasks\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/edit-task/edit-task.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reactForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/edit-task/edit-task.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, EventEmitter, OnInit, Output} from '@angular/core';\nimport {DataTasksService} from '../../Services/data-tasks.service';\nimport {ITasks} from '../../Interfaces/ITasks';\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.scss']\n})\nexport class EditTaskComponent implements OnInit {\n  @Input() editCurrentTask: ITasks;\n  @Output() updateCurrentTask = new EventEmitter();\n  formValues: ITasks;\n  reactForm: FormGroup;\n\n  constructor(private dataTasksService: DataTasksService,\n              private formBuilder: FormBuilder\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  public getTasks(): void {\n    // @ts-ignore\n    this.dataTasksService.getTasks()\n      .subscribe(\n        // @ts-ignore\n        (value: ITasks) => this.editCurrentTask = value,\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          console.log('completed !');\n        }\n      );\n  }\n\n  update(data: ITasks): void {\n    this.dataTasksService.updateTask(data)\n      .subscribe(\n        () => {\n          this.getTasks();\n          this.updateCurrentTask.emit();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  public onSubmit(): any {\n    const contactForm = this.reactForm.value;\n    this.formValues = {\n      // @ts-ignore\n      id: contactForm.id,\n      name: contactForm.name,\n      isTerminated: contactForm.isTerminated\n    };\n\n    this.update(this.formValues);\n  }\n\n  public createForm(): any {\n    this.reactForm = this.formBuilder.group({\n      // @ts-ignore\n      id: this.editCurrentTask.id,\n      // @ts-ignore\n      name: [this.editCurrentTask.name, Validators.compose([Validators.required, Validators.minLength(5)])],\n      // @ts-ignore\n      isTerminated: this.editCurrentTask.isTerminated\n    });\n  }\n}\n\n    \n\n    \n        {{ editCurrentTask.name }}\n\n  \n  \n    Changer le nom de la tâche :  \n    \n  \n\n  \n    \n     : Tâche terminée \n  \n  Mettre à jours\n\n\n    \n\n    \n                \n                    ./edit-task.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ editCurrentTask.name }}        Changer le nom de la tâche :                   : Tâche terminée     Mettre à jours'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TimerTaskComponent', 'selector': 'app-timer-task'}];\n    var DIRECTIVES = [{'name': 'TimerDirective', 'selector': '[appTimer]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITasks.html":{"url":"interfaces/ITasks.html","title":"interface - ITasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Interfaces/ITasks.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        @context\n                                \n                                \n                                            Optional\n                                        @id\n                                \n                                \n                                            Optional\n                                        @type\n                                \n                                \n                                            Optional\n                                        dateEnd\n                                \n                                \n                                            Optional\n                                        dateStart\n                                \n                                \n                                            Optional\n                                        duration\n                                \n                                \n                                        id\n                                \n                                \n                                        isTerminated\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateEnd\n                                    \n                                \n                                \n                                    \n                                        dateEnd:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateStart\n                                    \n                                \n                                \n                                    \n                                        dateStart:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTerminated\n                                    \n                                \n                                \n                                    \n                                        isTerminated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITasks {\n  '@context'?: string;\n  '@id'?: string;\n  '@type'?: string;\n  id: number;\n  name: string;\n  duration?: string;\n  isTerminated: boolean;\n  dateStart?: any;\n  dateEnd?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/tasks/Tasks.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./Tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./Tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionCreate\n                            \n                            \n                                    Public\n                                actionSearch\n                            \n                            \n                                    Public\n                                arrayOpenTimer\n                            \n                            \n                                    Private\n                                arrayTasks\n                            \n                            \n                                    Public\n                                editCurrentTask\n                            \n                            \n                                    Public\n                                editTaskActive\n                            \n                            \n                                    Public\n                                tasks\n                            \n                            \n                                    Public\n                                timerCurrentTask\n                            \n                            \n                                    Public\n                                timerTaskActive\n                            \n                            \n                                    Public\n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionPrimary\n                            \n                            \n                                    Public\n                                actionPrimaryExecute\n                            \n                            \n                                    Public\n                                closeTimer\n                            \n                            \n                                    Public\n                                deleteTask\n                            \n                            \n                                    Public\n                                editTask\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                    Public\n                                multiDeletion\n                            \n                            \n                                    Public\n                                multiFinish\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                postTask\n                            \n                            \n                                    Private\n                                saerchTask\n                            \n                            \n                                    Public\n                                selectTask\n                            \n                            \n                                    Public\n                                selectTimers\n                            \n                            \n                                    Public\n                                taskIsFinish\n                            \n                            \n                                    Public\n                                taskIsTerminated\n                            \n                            \n                                    Public\n                                timerDialog\n                            \n                            \n                                    Public\n                                timerIsOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTasksService: DataTasksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/tasks/Tasks.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTasksService\n                                                  \n                                                        \n                                                                        DataTasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            actionPrimary\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    actionPrimary(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            actionPrimaryExecute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    actionPrimaryExecute(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeTimer(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTask(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getId(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            multiDeletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    multiDeletion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            multiFinish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    multiFinish()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            postTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postTask(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saerchTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saerchTask(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectTask(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectTimers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectTimers(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            taskIsFinish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    taskIsFinish(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            taskIsTerminated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    taskIsTerminated(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            timerDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    timerDialog(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            timerIsOpen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    timerIsOpen(task: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/tasks/Tasks.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            arrayOpenTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            arrayTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editCurrentTask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editTaskActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITasks[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timerCurrentTask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timerTaskActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITasks\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/tasks/Tasks.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {DataTasksService} from '../../Services/data-tasks.service';\nimport {ITasks} from '../../Interfaces/ITasks';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './Tasks.component.html',\n  styleUrls: ['./Tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n  public tasks: ITasks[];\n  private arrayTasks: Array = [];\n  public arrayOpenTimer: Array = [];\n  public timerTaskActive: ITasks;\n  public editCurrentTask: any;\n  public timerCurrentTask: any;\n  public actionCreate = true;\n  public actionSearch = false;\n  public editTaskActive: boolean;\n  public values = '';\n\n  constructor(private dataTasksService: DataTasksService) {\n  }\n\n  ngOnInit(): void {\n    this.getTasks();\n  }\n\n  public getTasks(): void {\n    this.dataTasksService.getTasks()\n      .subscribe(\n        (value: ITasks[]) => {\n          this.tasks = value;\n          this.editTaskActive = false;\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          console.log('Get task is completed !');\n        }\n      );\n  }\n\n  // tslint:disable-next-line:typedef\n  public actionPrimary(e) {\n    const valueActionPrimary = e.target.value;\n    console.log(valueActionPrimary);\n    if (valueActionPrimary === 'createTask') {\n      this.getTasks();\n      this.actionCreate = true;\n      this.actionSearch = false;\n    }\n\n    if (valueActionPrimary === 'searchTask') {\n      this.getTasks();\n      this.actionCreate = false;\n      this.actionSearch = true;\n    }\n  }\n\n\n  public actionPrimaryExecute(event: any): void {\n    if (this.actionCreate) {\n      this.postTask(event);\n    }\n\n    if (this.actionSearch) {\n      this.saerchTask(event);\n    }\n  }\n\n  private postTask(event: any): void {\n    if (event.key === 'Enter') {\n      this.values = event.target.value;\n      event.target.value = '';\n      const name = this.values.trim();\n      const isTerminated = false;\n      if (!name) {\n        return;\n      }\n      this.dataTasksService.postTask({name, isTerminated} as unknown as ITasks)\n        .subscribe(() => {\n          this.getTasks();\n        });\n    }\n  }\n\n  private saerchTask(event: any): void {\n    if (event.key === 'Enter') {\n      this.values = event.target.value;\n      event.target.value = '';\n      const name = this.values.trim();\n\n      if (!name) {\n        return;\n      }\n\n      this.dataTasksService.searchTask(this.values)\n        .subscribe(\n          // @ts-ignore\n          (value: ITasks[]) => this.tasks = value,\n          (error) => {\n            console.log(error);\n          },\n          () => {\n            console.log('completed !');\n          });\n    }\n  }\n\n  public deleteTask(task: ITasks): void {\n    this.dataTasksService.deleteTask(task.id)\n      .subscribe(\n        () => {\n          if (this.timerIsOpen(task)) {\n            this.selectTimers(task);\n          }\n          this.getTasks();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  public multiDeletion(): void {\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i  {\n          this.getTasks();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  public taskIsFinish(task: ITasks): void {\n    task.isTerminated = true;\n    this.dataTasksService.updateTask(task)\n      .subscribe(\n        () => {\n          this.getTasks();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  public selectTask(task: ITasks): void {\n    const found = this.arrayTasks.includes(task);\n    if (found) {\n      const elem = this.arrayTasks.indexOf(task);\n      console.log(this.arrayTasks.splice(elem, 1));\n    } else {\n      this.arrayTasks.push(task);\n    }\n    this.arrayTasks = [...new Set(this.arrayTasks)];\n    console.log(this.arrayTasks);\n  }\n\n  public multiFinish(): void {\n    for (let i = 0; i \n    \n\n    \n        \n  \n\n  \n    \n    Create\n\n    \n    Search\n  \n\n\n\n\n\n  Delete Multiple\n  Finish tasks\n  Supression en traitement...\n\n\n\n  \n    \n  \n\n  \n    \n      \n        \n        - Name : {{ task.name }}\n        - Id : {{ task.id }}\n        - Finish : {{ task.isTerminated }}\n        - Durée : {{ task.duration }}\n\n        Finish\n        Edit\n        Timer\n        Delete\n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./Tasks.component.scss\n                \n                .fieldPrimary {\n  float:left;\n}\n\n.switch-field {\n  display: flex;\n  overflow: hidden;\n  float:left;\n}\n\n.switch-field input {\n  position: absolute !important;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  border: 0;\n  overflow: hidden;\n}\n\n.switch-field label {\n  background-color: #e4e4e4;\n  color: rgba(0, 0, 0, 0.6);\n  font-size: 14px;\n  line-height: 1;\n  text-align: center;\n  padding: 8px 16px;\n  margin-right: -1px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.1);\n  transition: all 0.1s ease-in-out;\n}\n\n.switch-field label:hover {\n  cursor: pointer;\n}\n\n.switch-field input:checked + label {\n  background-color: #a5dc86;\n  box-shadow: none;\n}\n\n.switch-field label:first-of-type {\n  border-radius: 4px 0 0 4px;\n}\n\n.switch-field label:last-of-type {\n  border-radius: 0 4px 4px 0;\n}\n\n/* This is just for CodePen. */\n\n.form {\n  max-width: 600px;\n  font-family: \"Lucida Grande\", Tahoma, Verdana, sans-serif;\n  font-weight: normal;\n  line-height: 1.625;\n  margin: 8px auto;\n  padding: 16px;\n}\n\nh2 {\n  font-size: 18px;\n  margin-bottom: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create        Search    Delete Multiple  Finish tasks  Supression en traitement...                                    - Name : {{ task.name }}        - Id : {{ task.id }}        - Finish : {{ task.isTerminated }}        - Durée : {{ task.duration }}        Finish        Edit        Timer        Delete                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TimerTaskComponent', 'selector': 'app-timer-task'}];\n    var DIRECTIVES = [{'name': 'TimerDirective', 'selector': '[appTimer]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimerDirective.html":{"url":"directives/TimerDirective.html","title":"directive - TimerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Directives/timer.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTimer]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Directives/timer.directive.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appTimer]'\n})\nexport class TimerDirective {\n\n  constructor() { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerTaskComponent.html":{"url":"components/TimerTaskComponent.html","title":"component - TimerTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Components/timer-task/timer-task.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timer-task\n            \n\n            \n                styleUrls\n                ./timer-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                btnClose\n                            \n                            \n                                    Public\n                                btnReset\n                            \n                            \n                                    Public\n                                btnStart\n                            \n                            \n                                    Public\n                                btnStop\n                            \n                            \n                                    Private\n                                closeDialogClose\n                            \n                            \n                                    Public\n                                heure\n                            \n                            \n                                    Public\n                                IdHeure\n                            \n                            \n                                    Public\n                                IdMinute\n                            \n                            \n                                    Public\n                                IdSeconde\n                            \n                            \n                                    Private\n                                IdTimer\n                            \n                            \n                                    Public\n                                interval\n                            \n                            \n                                    Public\n                                min\n                            \n                            \n                                    Public\n                                sec\n                            \n                            \n                                    Public\n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chronometer\n                            \n                            \n                                    Public\n                                clickCloseChrono\n                            \n                            \n                                    Public\n                                clickResetChrono\n                            \n                            \n                                    Public\n                                clickStartChrono\n                            \n                            \n                                    Public\n                                clickStopChrono\n                            \n                            \n                                    Private\n                                iniTimer\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                play\n                            \n                            \n                                    Public\n                                resetChrono\n                            \n                            \n                                    Private\n                                restart\n                            \n                            \n                                    Private\n                                save\n                            \n                            \n                                    Public\n                                startChrono\n                            \n                            \n                                    Public\n                                stopChrono\n                            \n                            \n                                    Private\n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timerCurrentTask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeCurrentTask\n                            \n                            \n                                updateCurrentTask\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataTasksService: DataTasksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Components/timer-task/timer-task.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataTasksService\n                                                  \n                                                        \n                                                                        DataTasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timerCurrentTask\n                    \n                \n                \n                    \n                        Type :         ITasks\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeCurrentTask\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        updateCurrentTask\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            chronometer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chronometer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickCloseChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickCloseChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickResetChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickResetChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickStartChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickStartChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickStopChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickStopChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            iniTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    iniTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:241\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            play\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    play()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            restart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopChrono\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopChrono()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: ITasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Components/timer-task/timer-task.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ITasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            btnClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCollectionOf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            btnReset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCollectionOf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            btnStart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCollectionOf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            btnStop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCollectionOf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            closeDialogClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            heure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            IdHeure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCollectionOf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            IdMinute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCollectionOf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            IdSeconde\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLCollectionOf\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            IdTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sec\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITasks\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Components/timer-task/timer-task.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, OnInit, Component, EventEmitter, Input, Output, OnDestroy} from '@angular/core';\nimport {ITasks} from '../../Interfaces/ITasks';\nimport {DataTasksService} from '../../Services/data-tasks.service';\n\n@Component({\n  selector: 'app-timer-task',\n  templateUrl: './timer-task.component.html',\n  styleUrls: ['./timer-task.component.scss']\n})\nexport class TimerTaskComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() timerCurrentTask: ITasks;\n  @Output() updateCurrentTask = new EventEmitter();\n  @Output() closeCurrentTask = new EventEmitter();\n  public task: ITasks;\n  public IdSeconde: HTMLCollectionOf;\n  public IdMinute: HTMLCollectionOf;\n  public IdHeure: HTMLCollectionOf;\n  public btnStart: HTMLCollectionOf;\n  public btnStop: HTMLCollectionOf;\n  public btnReset: HTMLCollectionOf;\n  private btnClose: HTMLCollectionOf;\n  private IdTimer: HTMLElement;\n  public interval = null;\n  public sec = 0;\n  public min = 0;\n  public heure = 0;\n  private closeDialogClose = false;\n\n  constructor(private dataTasksService: DataTasksService) {\n  }\n\n  ngOnInit(): void {\n    this.task = this.timerCurrentTask;\n  }\n\n  ngAfterViewInit(): void {\n    this.IdTimer = document.getElementById(`${this.task.id}`);\n    console.log(this.IdTimer);\n    this.IdSeconde = this.IdTimer.getElementsByClassName('seconde');\n    this.IdMinute = this.IdTimer.getElementsByClassName('minute');\n    this.IdHeure = this.IdTimer.getElementsByClassName('heure');\n    this.btnStart = this.IdTimer.getElementsByClassName('start');\n    this.btnStop = this.IdTimer.getElementsByClassName('stop');\n    this.btnReset = this.IdTimer.getElementsByClassName('reset');\n    this.btnClose = this.IdTimer.getElementsByClassName('close');\n    this.iniTimer();\n    this.btnStop[0].setAttribute('disabled', String(true));\n    this.clickStartChrono();\n    this.clickStopChrono();\n    this.clickResetChrono();\n    this.clickCloseChrono();\n  }\n\n  private iniTimer(): any {\n    let id: number;\n    id = this.timerCurrentTask.id;\n    this.dataTasksService.getTask(id)\n      .subscribe(\n        (value: ITasks) => {\n          if (value.duration !== undefined) {\n            this.task.duration = value.duration;\n            let array: Array;\n            array = this.task.duration.split(':');\n            this.heure = parseInt(array[0], null);\n            this.min = parseInt(array[1], null);\n            this.sec = parseInt(array[2], null);\n            if (this.heure  {\n          console.log(error);\n        },\n        () => {\n          console.log('Get task is completed !');\n        }\n      );\n  }\n\n  private update(data: ITasks): void {\n    this.dataTasksService.updateTask(data)\n      .subscribe(\n        () => {\n          if (this.closeDialogClose) {\n            this.closeCurrentTask.emit(this.task);\n          }\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  private play(): any {\n    this.task.dateStart = new Date();\n    this.update(this.task);\n  }\n\n  private save(): any {\n    console.log(this.sec);\n    if (this.sec !== 0) {\n      this.task.dateEnd = new Date();\n      this.task.duration = this.heure + ':' + this.min + ':' + this.sec;\n      this.update(this.task);\n    } else {\n      if (this.closeDialogClose) {\n        this.closeCurrentTask.emit(this.task);\n      }\n    }\n  }\n\n  private restart(): any {\n    this.task.dateStart = null;\n    this.task.dateEnd = null;\n    this.task.duration = null;\n    this.update(this.task);\n  }\n\n  public chronometer(): void {\n    let displaySec: string;\n    let displayMin: string;\n    let displayHeure: string;\n    this.sec = this.sec + 1;\n    if (this.sec  {\n      this.chronometer();\n    }, 1000);\n    /*\n        const myNotification = new Notification('Start Chrono', {\n            //body: 'Lorem Ipsum Dolor Sit Amet'\n        })\n        myNotification.onclick = () => {\n            console.log('Notification clicked')\n        }\n    */\n  }\n\n  public stopChrono(): void {\n    clearInterval(this.interval);\n    /*\n    const myNotification = new Notification('Stop Chrono', {\n        //body: 'Lorem Ipsum Dolor Sit Amet'\n    })\n    myNotification.onclick = () => {\n        console.log('Notification clicked')\n    }\n    */\n  }\n\n  public clickStartChrono(): void {\n      this.btnStart[0].addEventListener('click', () => {\n      this.btnStart[0].setAttribute('disabled', String(true));\n      this.btnStop[0].removeAttribute('disabled');\n      this.startChrono();\n      this.play();\n    });\n  }\n\n  public clickStopChrono(): void {\n    this.btnStop[0].addEventListener('click', () => {\n      this.stopChrono();\n      this.save();\n      this.btnStart[0].removeAttribute('disabled');\n      this.btnStop[0].setAttribute('disabled', String(true));\n    });\n  }\n\n  public resetChrono(): void {\n    this.sec = 0;\n    this.min = 0;\n    this.heure = 0;\n    (this.IdSeconde[0] as HTMLElement).innerText = '00';\n    (this.IdMinute[0] as HTMLElement).innerText = '00';\n    (this.IdHeure[0] as HTMLElement).innerText = '00';\n    this.restart();\n  }\n\n  public clickResetChrono(): void {\n    this.btnReset[0].addEventListener('click', () => {\n      this.resetChrono();\n    });\n  }\n\n  public clickCloseChrono(): void {\n    this.btnClose[0].addEventListener('click', () => {\n      this.stopChrono();\n      this.closeDialogClose = true;\n      this.save();\n    });\n  }\n\n  ngOnDestroy(): void {\n    console.log('close');\n    clearInterval(this.interval);\n  }\n}\n\n    \n\n    \n        \n  {{ timerCurrentTask.id }} - {{ timerCurrentTask.name }}\n  \n    \n      00 : 00 : 00\n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      Close\n    \n  \n\n\n    \n\n    \n                \n                    ./timer-task.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ timerCurrentTask.id }} - {{ timerCurrentTask.name }}            00 : 00 : 00                                                            Close      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TimerTaskComponent', 'selector': 'app-timer-task'}];\n    var DIRECTIVES = [{'name': 'TimerDirective', 'selector': '[appTimer]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimerTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Components/edit-task/edit-task.component.ts\n            \n            component\n            EditTaskComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/Components/tasks/Tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/Components/timer-task/timer-task.component.ts\n            \n            component\n            TimerTaskComponent\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/app/Directives/timer.directive.ts\n            \n            directive\n            TimerDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/Interfaces/ITasks.ts\n            \n            interface\n            ITasks\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/Services/data-tasks.service.ts\n            \n            injectable\n            DataTasksService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.1.5\n        \n            @angular/common : ~10.1.5\n        \n            @angular/compiler : ~10.1.5\n        \n            @angular/core : ~10.1.5\n        \n            @angular/forms : ~10.1.5\n        \n            @angular/platform-browser : ~10.1.5\n        \n            @angular/platform-browser-dynamic : ~10.1.5\n        \n            @angular/router : ~10.1.5\n        \n            @angular/service-worker : ~10.1.5\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTasksManagerAngular\nThis project was generated with Angular CLI version 10.1.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nAppModule -->\n\nTasksComponent->AppModule\n\n\n\n\n\nTimerTaskComponent\n\nTimerTaskComponent\n\nAppModule -->\n\nTimerTaskComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
